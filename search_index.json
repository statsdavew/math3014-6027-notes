[["index.html", "MATH3014-6027 Design (and Analysis) of Experiments Preface", " MATH3014-6027 Design (and Analysis) of Experiments Dave Woods 2022-03-08 Preface These are draft lecture notes for the modules MATH3014 and MATH6027 Design (and Analysis) of Experiments at the University of Southampton for academic year 2021-22. They are very much work in progress. Southampton prerequisites for this module are MATH2010 or MATH6174 and STAT6123 (or equivalent modules on linear modelling). "],["intro.html", "Chapter 1 Motivation, introduction and revision 1.1 Motivation 1.2 Aims of experimentation and some examples 1.3 Some definitions 1.4 Principles of experimentation 1.5 Revision on the linear model 1.6 Exercises", " Chapter 1 Motivation, introduction and revision Definition 1.1 An experiment is the process through which data are collected to answer a scientific question (physical science, social science, actuarial science \\(\\dots\\)) by deliberately varying some features of the process under study in order to understand the impact of these changes on measureable responses. In this course we consider only intervention experiments, in which some aspects of the process are under the experimenters’ control. We do not consider surveys or observational studies. Definition 1.2 Design of experiments is the topic in Statistics concerned with the selection of settings of controllable variables or factors in an experiment and their allocation to experimental units in order to maximise the effectiveness of the experiment at achieving its aim. People have been designing experiments for as long as they have been exploring the natural world. Collecting empirical evidence is key for scientific development, as described in terms of clinical trials by xkcd: Some notable milestones in the history of the design of experiments include: prior to the 20th century: Francis Bacon (17th century; pioneer of the experimental methods) James Lind (18th century; experiments to eliminate scurvy) Charles Peirce (19th century; advocated randomised experiments and randomisation-based inference) 1920s: agriculture (particularly at the Rothamsted Agricultural Research Station) 1940s: clinical trials (Austin Bradford-Hill) 1950s: (manufacturing) industry (W. Edwards Deming; Genichi Taguchi) 1960s: psychology and economics (Vernon Smith) 1980s: in-silico (computer experiments) 2000s: online (A/B testing) See Luca and Bazerman (2020) for further history, anecdotes and examples, especially from psychology and technology. Figure 1.1 shows the Broadbalk agricultural field experiment at Rothamsted, one of the longest continuous running experiments in the world, which is testing the impact of different manures and fertilizers on the growth of winter wheat. Figure 1.1: The Broadbalk experiment, Rothamsted (photograph taken 2016) 1.1 Motivation Example 1.1 Consider an experiment to compare two treatments (e.g. drugs, diets, fertilisers, \\(\\dots\\)). We have \\(n\\) subjects (people, mice, plots of land, \\(\\dots\\)), each of which can be assigned one of the two treatments. A response (protein measurement, weight, yield, \\(\\dots\\)) is then measured. Question: How many subjects should be assigned to each treatment to gain the most precise1 inference about the difference in response from the two treatments? Consider a linear statistical model2 for the response (see MATH2010 or MATH6174/STAT6123): \\[\\begin{equation} Y_j=\\beta_{0}+\\beta_{1}x_j+\\varepsilon_j\\,,\\qquad j=1, \\ldots, n\\,, \\tag{1.1} \\end{equation}\\] where \\(\\varepsilon_j\\sim N(0,\\sigma^{2})\\) are independent and identically distributed errors and \\(\\beta_{0}, \\beta_{1}\\) are unknown constants (parameters). Let \\[\\begin{equation} x_{j}=\\left\\{\\begin{array}{ll} -1&amp;\\textrm{if treatment 1 is applied to the $j$th subject}\\\\ +1&amp;\\textrm{if treatment 2 is applied to the $j$th subject}\\nonumber , \\end{array} \\right. \\end{equation}\\] for \\(j=1,\\dots,n\\).3 The difference in expected response from treatments 1 and 2 is \\[\\begin{equation} \\begin{split} \\textrm{E}[Y_j\\, |\\, x_j = +1] - \\textrm{E}[Y_j\\, |\\, x_j = -1] &amp; = \\beta_{0}+\\beta_{1}-\\beta_{0}+\\beta_{1} \\\\ &amp; = 2\\beta_{1}\\,. \\end{split} \\tag{1.2} \\end{equation}\\] Therefore, we require the the most precise estimator of \\(\\beta_{1}\\) possible. That is, we wish to make the variance of our estimator of \\(\\beta_1\\) as small as possible. Parameters \\(\\beta_{0}\\) and \\(\\beta_{1}\\) can be estimated using least squares (see MATH2010 or MATH6174/STAT6123). For \\(Y_1,\\dots,Y_n\\), we can write the model down in matrix form: \\[\\begin{equation*} \\left[ \\begin{array}{c} Y_1\\\\ \\vdots\\\\ Y_n\\end{array}\\right] =\\left[ \\begin{array}{cc} 1&amp;x_{1}\\\\ \\vdots&amp;\\vdots\\\\ 1&amp;x_{n}\\end{array}\\right] \\left[ \\begin{array}{c} \\beta_{0}\\\\ \\beta_{1}\\end{array}\\right] +\\left[ \\begin{array}{c} \\varepsilon_{1}\\\\ \\vdots\\\\ \\varepsilon_{n}\\end{array}\\right]\\,. \\end{equation*}\\] Or, by defining some notation: \\[\\begin{equation} \\boldsymbol{Y}=X\\boldsymbol{\\beta}+\\boldsymbol{\\varepsilon}\\, \\tag{1.3} \\end{equation}\\] where \\(\\boldsymbol{Y}\\) - \\(n\\times 1\\) vector of responses; \\(X\\) - \\(n\\times p\\) model matrix; \\(\\boldsymbol{\\beta}\\) - \\(p\\times 1\\) vector of parameters; \\(\\boldsymbol{\\varepsilon}\\) - \\(n\\times 1\\) vector of errors. The least squares estimators, \\(\\hat{\\boldsymbol{\\beta}}\\), are chosen such that the quadratic form \\[\\begin{equation*} (\\boldsymbol{Y}-X\\boldsymbol{\\beta})^{\\textrm{T}}(\\boldsymbol{Y}-X\\boldsymbol{\\beta}) \\end{equation*}\\] is minimised (recall that \\(\\textrm{E}(\\textbf{Y})=X\\boldsymbol{\\beta}\\)). Therefore \\[\\begin{equation*} \\hat{\\boldsymbol{\\beta}} = \\textrm{argmin}_{\\boldsymbol{\\beta}}(\\boldsymbol{Y}^{\\textrm{T}}\\boldsymbol{Y}+\\boldsymbol{\\beta}^{\\textrm{T}}X^{\\textrm{T}}X\\boldsymbol{\\beta} -2\\boldsymbol{\\beta}^{\\textrm{T}}X^{\\textrm{T}}\\boldsymbol{Y})\\,. \\end{equation*}\\] If we differentiate with respect to \\(\\boldsymbol{\\beta}\\)4, \\[\\begin{equation*} \\frac{\\partial}{\\partial\\boldsymbol{\\beta}}=2X^{\\textrm{T}}X\\boldsymbol{\\beta}-2X^{\\textrm{T}}\\boldsymbol{Y}\\,,\\nonumber \\end{equation*}\\] and equate to 0, we get the estimators \\[\\begin{equation} \\hat{\\boldsymbol{\\beta}}=(X^{\\textrm{T}}X)^{-1}X^{\\textrm{T}}\\boldsymbol{Y}\\,. \\tag{1.4} \\end{equation}\\] These are the least squares estimators. For Example 1.1, \\[ X=\\left[\\begin{array}{cc} 1&amp;x_{1}\\\\ \\vdots&amp;\\vdots\\\\ 1&amp;x_{n}\\end{array}\\right]\\,, \\qquad X^{\\textrm{T}}X=\\left[\\begin{array}{cc} n&amp;\\sum x_j\\\\ \\sum x_j&amp;\\sum x_j^{2}\\end{array}\\right]\\,, \\] \\[ (X^{\\textrm{T}}X)^{-1}=\\frac{1}{n\\sum x_j^{2}-(\\sum x_j)^{2}}\\left[\\begin{array}{cc} \\sum x_j^{2}&amp;-\\sum x_j\\\\ -\\sum x_j&amp;n\\end{array}\\right]\\,, \\qquad X^{\\textrm{T}}\\boldsymbol{Y}=\\left[\\begin{array}{c} \\sum Y_j\\\\ \\sum x_jY_j\\end{array}\\right]\\,. \\] Then, \\[\\begin{align} \\hat{\\boldsymbol{\\beta}}=\\left[\\begin{array}{c} \\hat{\\beta}_{0}\\\\ \\hat{\\beta}_{1}\\end{array}\\right] &amp; =\\frac{1}{n\\sum x_j^{2}-(\\sum x_j)^{2}} \\left[\\begin{array}{cc} \\sum x_j^{2}&amp;-\\sum x_j\\\\ -\\sum x_j&amp;n\\end{array}\\right] \\left[\\begin{array}{c} \\sum Y_j\\\\ \\sum x_jY_j\\end{array}\\right]\\nonumber \\\\ &amp;= \\frac{1}{n\\sum x_j^{2}-(\\sum x_j)^{2}}\\left[\\begin{array}{c} \\sum Y_j\\sum x_j^{2}-\\sum x_j\\sum x_jY_j\\\\ n\\sum x_jY_j-\\sum x_j\\sum Y_j\\end{array}\\right]\\,. \\end{align}\\] We don’t usually work through the algebra in such detail; the matrix form is often sufficient for theoretical and numerical calculations and software, e.g. R, can be used. The precision of \\(\\hat{\\boldsymbol{\\beta}}\\) is measured via the variance-covariance matrix, given by \\[\\begin{align} \\textrm{Var}(\\hat{\\boldsymbol{\\beta}}) &amp; = \\textrm{Var}\\{(X^{\\textrm{T}}X)^{-1}X^{\\textrm{T}}\\boldsymbol{Y}\\}\\\\ &amp; =(X^{\\textrm{T}}X)^{-1}X^{\\textrm{T}}\\textrm{Var}(\\boldsymbol{Y})X(X^{\\textrm{T}}X)^{-1}\\\\ &amp; = (X^{\\textrm{T}}X)^{-1}\\sigma^{2}\\,, \\end{align}\\] where \\(\\boldsymbol{Y}\\sim N(X\\boldsymbol{\\beta},I_n\\sigma^{2})\\), where \\(I_n\\) is an \\(n\\times n\\) identity matrix. Hence, in our example, \\[\\begin{align*} \\textrm{Var}(\\hat{\\boldsymbol{\\beta}}) &amp; = \\frac{1}{n\\sum x_j^{2}-(\\sum x_j)^{2}}\\left[\\begin{array}{cc} \\sum x_j^{2}&amp;-\\sum x_j\\\\ -\\sum x_j&amp;n\\end{array}\\right]\\sigma^{2}\\\\ &amp; = \\left[\\begin{array}{cc} \\textrm{Var}(\\hat\\beta_{0})&amp;\\textrm{Cov}(\\hat\\beta_{0},\\hat\\beta_{1})\\\\ \\textrm{Cov}(\\hat\\beta_{0},\\hat\\beta_{1})&amp;\\textrm{Var}(\\hat\\beta_{1})\\end{array}\\right]\\,. \\end{align*}\\] For estimating the difference between treatments, we are interested in \\[\\begin{align*} \\textrm{Var}(\\hat{\\beta}_{1})&amp; = \\frac{n}{n\\sum x_j^{2}-(\\sum x_j)^{2}}\\sigma^{2}\\\\ &amp; = \\frac{n}{n^2 - (\\sum x_j)^2}\\sigma^{2}\\,, \\end{align*}\\] as \\(x_j=\\pm 1\\), therefore \\(x_j^2=1\\) for all \\(j=1,\\ldots,n\\), and hence \\(\\sum x_j^2=n\\). To achieve the most precise estimator, we need to minimise \\(\\textrm{Var}(\\hat{\\beta}_{1})\\) or equivalently minimise \\(|\\sum x_j|\\). This goal can be achieved through the choice of \\(x_{1},\\dots,x_{n}\\): as each \\(x_j\\) can only take one of two values, -1 or +1, this is equivalent to choosing the numbers of subjects assigned to treatment 1 and treatment 2; call these \\(n_{1}\\) and \\(n_{2}\\) respectively, with \\(n_{1}+n_{2}=n\\) It is obvious that \\(\\sum x_j = 0\\) if and only if \\(n_1=n_2\\). Therefore, assuming \\(n\\) is even, the optimal design has \\(n_{1}=\\frac{n}{2}\\) subjects assigned to treatment 1 and \\(n_{2}=\\frac{n}{2}\\) subjects assigned to treatment 2. For \\(n\\) odd, we choose \\(n_{1}=\\frac{n+1}{2}\\), \\(n_{2}=\\frac{n-1}{2}\\), or vice versa. Definition 1.3 We can assess different designs using their efficiency: \\[\\begin{equation} \\textrm{Eff}=\\frac{\\textrm{Var}(\\hat{\\beta}_{1}\\, |\\, d^{*})}{\\textrm{Var}(\\hat{\\beta}_{1}\\, |\\, d_{1})} \\tag{1.5} \\end{equation}\\] where \\(d_{1}\\) is a design we want to assess and \\(d^{*}\\) is the optimal design with smallest variance. Note that \\(0\\leq\\textrm{Eff}\\leq 1\\). In Figure 1.2 below, we plot this efficiency for Example 1.1, using different choices of \\(n_1\\). The total number of runs is fixed at \\(n = 100\\), and the function eff calculates the efficiency from Definition 1.3 for a design with \\(n_1\\) subjects assigned to treatment 1. Clearly, efficiency of 1 is achieved when \\(n_1 = n_2\\) (equal allocation of treatments 1 and 2). If \\(n_1=0\\) or \\(n_1 = 1\\), the efficiency is zero; we cannot estimate the difference between two treatments if we only allocate subjects to one of them. n &lt;- 100 eff &lt;- function(n1) 1 - ((2 * n1 - n) / n)^2 curve(eff, from = 0, to = n, ylab = &quot;Eff&quot;, xlab = expression(n[1])) Figure 1.2: Efficiencies for designs for Example 1.1 with different numbers, \\(n_1\\), of subjects assigned to treatment 1 when the total number of subjects is \\(n=100\\). 1.2 Aims of experimentation and some examples Some reasons experiments are performed: Treatment comparison (Chapters 2 and 3) compare several treatments (and choose the best) e.g. clinical trial, agricultural field trial Factor screening (Chapters 4, 5 and 6) many complex systems may involve a large number of (discrete) factors (controllable features) which of these factors have a substantive impact? (relatively) small experiments e.g. industrial experiments on manufacturing processes Response surface exploration (Chapter 7) detailed description of relationship between important (continuous) variables and response typically second order polynomial regression models larger experiments, often built up sequentially e.g. alcohol yields in a pharmaceutical experiments Optimisation (Chapter 7) finding settings of variables that lead to maximum or minimum response typically use response surface methods and sequential ``hill climbing’’ strategy 1.3 Some definitions Definition 1.4 The response \\(Y\\) is the outcome measured in an experiment; e.g. yield from a chemical process. The response from the \\(n\\) observations are denoted \\(Y_{1},\\dots,Y_{n}\\). Definition 1.5 Factors (discrete) or variables (continuous) are features which can be set or controlled in an experiment; \\(m\\) denotes the number of factors or variables under investigation. For discrete factors, we call the possible settings of the factor its levels. We denote by \\(x_{ij}\\) the value taken by factor or variable \\(i\\) in the \\(j\\)th run of the experiment (\\(i = 1, \\ldots, m\\); \\(j = 1, \\ldots, n\\)). Definition 1.6 The treatments or support points are the distinct combinations of factor or variable values in the experiment. Definition 1.7 An experimental unit is the basic element (material, animal, person, time unit, ) to which a treatment can be applied to produce a response. In Example 1.1 (comparing two treatments): Response \\(Y\\): Measured outcome, e.g. protein level or pain score in clinical trial, yield in an agricultural field trial. Factor \\(x\\): “treatment” applied Levels \\[ \\begin{array}{ll} \\textrm{treatment 1}&amp;x =-1\\\\ \\textrm{treatment 2}&amp;x =+1 \\end{array} \\] Treatment or support point: Two treatments or support points Experimental unit: Subject (person, animal, plot of land, ). 1.4 Principles of experimentation Three fundamental principles that need to be considered when designing an experiment are: replication randomisation stratification (blocking) 1.4.1 Replication Each treatment is applied to a number of experimental units, with the \\(j\\)th treatment replicated \\(r_{j}\\) times. This enables the estimation of the variances of treatment effect estimators; increasing the number of replications, or replicates, decreases the variance of estimators of treatment effects. (Note: proper replication involves independent application of the treatment to different experimental units, not just taking several measurements from the same unit). 1.4.2 Randomisation Randomisation should be applied to the allocation of treatments to units. Randomisation protects against bias; the effect of variables that are unknown and potentially uncontrolled or subjectivity in applying treatments. It also provides a formal basis for inference and statistical testing. For example, in a clinical trial to compare a new drug and a control random allocation protects against “unmeasured and uncontrollable” features (e.g. age, sex, health) bias resulting from the clinician giving new drug to patients who are sicker. Clinical trials are usually also double-blinded, i.e. neither the healthcare professional nor the patient knows which treatment the patient is receiving. 1.4.3 Stratification (or blocking) We would like to use a wide variety of experimental units (e.g. people or plots of land) to ensure coverage of our results, i.e. validity of our conclusions across the population of interest. However, if the sample of units from the population is too heterogenous, then this will induce too much random variability, i.e. increase \\(\\sigma^{2}\\) in \\(\\varepsilon_{j}\\sim N(0,\\sigma^{2})\\), and hence increase the variance of our parameter estimators. We can reduce this extraneous variation by splitting our units into homogenous sets, or blocks, and including a blocking term in the model. The simplest blocked experiment is a randomised complete block design, where each block contains enough units for all treatments to be applied. Comparisons can then be made within each block. Basic principle: block what you can, randomise what you cannot. Later we will look at blocking in more detail, and the principle of incomplete blocks. 1.5 Revision on the linear model Recall: \\(\\boldsymbol{Y}=X\\boldsymbol{\\beta}+\\boldsymbol{\\varepsilon}\\), with \\(\\boldsymbol{\\varepsilon}\\sim N(\\boldsymbol{0},I_n\\sigma^{2})\\). Let the \\(j\\)th row of \\(X\\) be denoted \\(\\boldsymbol{x}^\\textrm{T}_j\\), which holds the values of the predictors, or explanatory variables, for the \\(j\\)th observation. Then \\[\\begin{equation*} Y_j=\\boldsymbol{x}_j^{\\textrm{T}}\\boldsymbol{\\beta}+\\varepsilon_j\\,,\\quad j=1,\\ldots,n\\,. \\end{equation*}\\] For example, quite commonly, for continuous variables \\[ \\boldsymbol{x}_j=(1,x_{1j},x_{2j},\\dots,x_{mj})^{\\textrm{T}}\\,, \\] and so \\[ \\boldsymbol{x}_j^{\\textrm{T}}\\boldsymbol{\\beta}=\\beta_{0}+\\beta_{1}x_{1j}+\\dots+\\beta_{m}x_{mj}\\,. \\] The laest squares estimators are given by \\[\\begin{equation} \\hat{\\boldsymbol{\\beta}}=(X^{\\textrm{T}}X)^{-1}X^{\\textrm{T}}\\boldsymbol{Y}\\,,\\nonumber \\end{equation}\\] with \\[\\begin{equation} \\textrm{Var}(\\hat{\\boldsymbol{\\beta}})=(X^{\\textrm{T}}X)^{-1}\\sigma^{2}\\,.\\nonumber \\end{equation}\\] 1.5.1 Variance of a Prediction/Fitted Value A prediction of the mean response at point \\(\\boldsymbol{x}_0\\) (which may or may not be in the design) is \\[ \\hat{Y}_0 = \\boldsymbol{x}_0^{\\textrm{T}}\\hat{\\boldsymbol{\\beta}}\\,, \\] with \\[\\begin{align*} \\textrm{Var}(\\hat{Y}_0) &amp; = \\textrm{Var}\\left(\\boldsymbol{x}_0^{\\textrm{T}}\\hat{\\boldsymbol{\\beta}}\\right) \\\\ &amp; = \\boldsymbol{x}_0^{\\textrm{T}}\\textrm{Var}(\\hat{\\boldsymbol{\\beta}})\\boldsymbol{x}_0 \\\\ &amp; = \\boldsymbol{x}_0^{\\textrm{T}}(X^{\\textrm{T}}X)^{-1}\\boldsymbol{x}_0\\sigma^{2}\\,. \\end{align*}\\] For a linear model, this variance depends only on the assumed regression model and the design (through \\(X\\)), the point at which prediction is to be made (\\(\\boldsymbol{x}_0\\)) and the value of \\(\\sigma^2\\); it does not depend on data \\(\\boldsymbol{Y}\\) or parameters \\(\\boldsymbol{\\beta}\\). Similarly, we can find the variance-covariance matrix of the fitted values: \\[ \\textrm{Var}(\\hat{Y})=\\textrm{Var}(X\\hat{\\boldsymbol{\\beta}})=X(X^{\\textrm{T}}X)^{-1}X^{\\textrm{T}}\\sigma^{2}\\,. \\] 1.5.2 Analysis of Variance and R\\(^{2}\\) as Model Comparison To assess the goodness-of-fit of a model, we can use the residual sum of squares \\[\\begin{align*} \\textrm{RSS} &amp; = (\\boldsymbol{Y} - X\\hat{\\boldsymbol{\\beta}})^{\\textrm{T}} (\\boldsymbol{Y} - X\\hat{\\boldsymbol{\\beta}})\\\\ &amp; = \\sum^{n}_{j=1}\\left\\{Y_{j}-\\boldsymbol{x}_{j}^{\\textrm{T}}\\hat{\\boldsymbol{\\beta}}\\right\\}^{2}\\\\ &amp; = \\sum^{n}_{j=1}r_{j}^{2}\\,, \\end{align*}\\] where \\[ r_{j}=Y_{j}-\\boldsymbol{x}_{j}^{\\textrm{T}}\\hat{\\boldsymbol{\\beta}}\\,. \\] Often, a comparison is made to the null model \\[ Y_{j}=\\beta_{0}+\\varepsilon_{j}\\,, \\] i.e. \\(Y_{i}\\sim N(\\beta_{0},\\sigma^{2})\\). The residual sum of squares for the null model is given by \\[ \\textrm{RSS}(\\textrm{null}) = \\boldsymbol{Y}^{\\textrm{T}}\\boldsymbol{Y} - m\\bar{Y}^{2}\\,, \\] as \\[ \\hat{\\beta}_{0} = \\bar{Y} = \\frac{1}{n}\\sum_{j=1}^n Y_{j}\\,. \\] How do we compare these models? Ratio of residual sum of squares: \\[\\begin{align*} R^{2} &amp; = 1 - \\frac{\\textrm{RSS}}{\\textrm{RSS}(\\textrm{null})} \\\\ &amp; = 1 - \\frac{(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})^{\\textrm{T}}(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})}{\\boldsymbol{Y}^{\\textrm{T}}\\boldsymbol{Y}-n\\bar{Y}^{2}}\\,. \\end{align*}\\] The quantity \\(0\\leq R^{2}\\leq 1\\) is sometimes called the coefficient of multiple determination: high \\(R^{2}\\) implies that the model describes much of the variation in the data; but note that \\(R^{2}\\) will always increase as \\(p\\) (the number of explanatory variables) increases, with \\(R^{2}=1\\) when \\(p=n\\); some software packages will report the adjusted \\(R^{2}\\). \\[\\begin{align*} R^{2}_{a} &amp; = 1-\\frac{\\textrm{RSS}/(n-p)}{\\textrm{RSS}(\\textrm{null})/(n-1)}\\\\ &amp; = 1 - \\frac{(\\boldsymbol{Y} - X\\hat{\\boldsymbol{\\beta}})^{\\textrm{T}} (\\boldsymbol{Y} - X\\hat{\\boldsymbol{\\beta}})/(n-p)}{(\\boldsymbol{Y}^{\\textrm{T}}\\boldsymbol{Y} - n\\bar{Y}^{2})/(n-1)}; \\end{align*}\\] \\(R_a^2\\) does not necessarily increase with \\(p\\) (as we divide by degrees of freedom to adjust for complexity of the model). Analysis of variance (ANOVA): An ANOVA table is compact way of presenting the results of (sequential) comparisons of nested models. You should be familiar with an ANOVA table of the following form. Table 1.1: A standard ANOVA table. Source Degress of Freedom (Sequential) Sum of Squares Mean Square Regression \\(p-1\\) By subtraction; see (1.6) Reg SS/\\((p-1)\\) Residual \\(n-p\\) \\((\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})^{\\textrm{T}}(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})\\)5 RSS/\\((n-p)\\) Total \\(n-1\\) \\(\\boldsymbol{Y}^{\\textrm{T}}\\boldsymbol{Y}-n\\bar{Y}^{2}\\)6 In row 1 of Table 1.1 above, \\[\\begin{align} \\textrm{Regression SS = Total SS $-$ RSS} &amp; = \\boldsymbol{Y}^{\\textrm{T}}\\boldsymbol{Y} - n\\bar{Y}^{2} - (\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})^{\\textrm{T}}(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})\\\\ &amp; = -n\\bar{Y}^{2}-\\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}(X^{\\textrm{T}}X)\\hat{\\boldsymbol{\\beta}}+2\\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}X^{\\textrm{T}}\\boldsymbol{Y} \\\\ &amp; = \\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}(X^{\\textrm{T}}X)\\hat{\\boldsymbol{\\beta}}-n\\bar{Y}^{2}\\,, \\tag{1.6} \\end{align}\\] with the last line following from \\[\\begin{align*} \\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}X^{\\textrm{T}}\\boldsymbol{Y} &amp; = \\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}(X^{\\textrm{T}}X)(X^{\\textrm{T}}X)^{-1}X^{\\textrm{T}}\\boldsymbol{Y} \\\\ &amp; = \\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}(X^{\\textrm{T}}X)\\hat{\\boldsymbol{\\beta}} \\end{align*}\\] This idea can be generalised to the comparison of a sequence of nested models - see Problem Sheet 1. Hypothesis testing is performed using the mean square: \\[\\begin{equation} \\frac{\\textrm{Regression SS}}{p-1}=\\frac{\\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}(X^{\\textrm{T}}X)\\hat{\\boldsymbol{\\beta}}-n\\bar{Y}^{2}}{p-1}\\,.\\nonumber \\end{equation}\\] Under \\(\\textrm{H}_{0}: \\beta_{1}=\\dots=\\beta_{p-1}=0\\) \\[\\begin{align*} \\frac{\\textrm{Regression SS}/(p-1)}{\\textrm{RSS}/(n-p)} &amp; = \\frac{(\\hat{\\boldsymbol{\\beta}}^{\\textrm{T}}(X^{\\textrm{T}}X)\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^{2})/(p-1)}{(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})^{\\textrm{T}}(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})/(n-p)}\\nonumber\\\\ &amp; \\sim F_{p-1,n-p}\\,, \\end{align*}\\] an \\(F\\) distribution with \\(p-1\\) and \\(n-p\\) degrees of freedom; defined via the ratio of two independent \\(\\chi^{2}\\) distributions. Also, \\[\\begin{equation*} \\frac{\\textrm{RSS}}{n-p}=\\frac{(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})^{\\textrm{T}}(\\boldsymbol{Y}-X\\hat{\\boldsymbol{\\beta}})}{n-p}=\\hat{\\sigma}^{2} \\end{equation*}\\] is an unbiased estimator for \\(\\sigma^{2}\\), and \\[\\begin{equation*} \\frac{(n-p)}{\\sigma^{2}}\\hat{\\sigma}^{2}\\sim\\chi^{2}_{n-p}\\,. \\end{equation*}\\] This is a Chi-squared distribution with \\(n-p\\) degrees of freedom (see MATH2010 or MATH6174 notes). 1.6 Exercises (Adapted from Morris, 2011) A classic and famous example of a simple hypothetical experiment was described by Fisher (1935): A lady declares that by tasting a cup of tea made with milk she can discriminate whether the milk or the tea infusion was added first to the cup. We will consider the problem of designing an experiment by means of which this assertion can be tested. For this purpose let us first lay down a simple form of experiment with a view to studying its limitations and its characteristics, both those that same essential to the experimental method, when well developed, and those that are not essential but auxiliary. Our experiment consists in mixing eight cups of tea, four in one way and four in the other, and presenting them to the subject for judgement in a random order. The subject has been told in advance of what the test will consist, namely that she will be asked to taste eight cups, that these shall be four of each kind, and that they shall be presented to her in a random order, that is an order not determined arbitrarily by human choice, but by the actual manipulation of the physical appartatus used in games of chance, cards, dice, roulettes, etc., or, more expeditiously, from a published collection of random sampling numbers purporting to give the actual results of such manipulation7. Her task is to divide the 8 cups into two sets of 4, agreeing, if possible, with the treatments received. Define the treatments in this experiment. Identify the units in this experiment. How might a “physical appartatus” from a “game of chance” be used to perform the randomisation. Explain one example. Suppose eight tea cups are available for this experiment but they are not identical. Instead they come from two sets. Foru are made from heavy, thick porcelain; four from much lighter china. If each cup can only be used once, how might this fact be incorporated into the design of the experiment? Solution There are two treatments in the experiment - the two ingredients “milk first” and “tea first”. The experimental units are the “cups of tea”, made up from the tea and milk used and also the cup itself. The simplest method here might be to select four black playing cards and four red playing cards, assign one treatment to each colour, shuffle the cards, and then draw them in order. The colour drawn indicates the treatment that should be used to make the next cup of tea. This operation would give one possible randomisation. We could of course also use R. sample(rep(c(&quot;Milk first&quot;, &quot;Tea first&quot;), c(4, 4)), size = 8, replace = F) ## [1] &quot;Milk first&quot; &quot;Milk first&quot; &quot;Tea first&quot; &quot;Tea first&quot; &quot;Tea first&quot; ## [6] &quot;Tea first&quot; &quot;Milk first&quot; &quot;Milk first&quot; Type of cup could be considered as a blocking factor. One way of incorporating it would be to split the experiment into two (blocks), each with four cups (two milk first, two tea first). We would still wish to randomise allocation of treatments to units within blocks. # block 1 sample(rep(c(&quot;Milk first&quot;, &quot;Tea first&quot;), c(2, 2)), size = 4, replace = F) ## [1] &quot;Tea first&quot; &quot;Milk first&quot; &quot;Tea first&quot; &quot;Milk first&quot; # block 2 sample(rep(c(&quot;Milk first&quot;, &quot;Tea first&quot;), c(2, 2)), size = 4, replace = F) ## [1] &quot;Tea first&quot; &quot;Milk first&quot; &quot;Milk first&quot; &quot;Tea first&quot; Consider the linear model \\[\\boldsymbol{y}= X\\boldsymbol{\\beta}+ \\boldsymbol{\\varepsilon}\\,,\\] with \\(\\boldsymbol{y}\\) an \\(n\\times 1\\) vector of responses, \\(X\\) a \\(n\\times p\\) model matrix and \\(\\boldsymbol{\\varepsilon}\\) a \\(n\\times 1\\) vector of independent and identically distributed random variables with constant variance \\(\\sigma^2\\). Derive the least squares estimator \\(\\hat{\\boldsymbol{\\beta}}\\) for this multiple linear regression model, and show that this estimator is unbiased. Using the definition of (co)variance, show that \\[\\mbox{Var}(\\hat{\\boldsymbol{\\beta}}) = \\left(X^{\\mathrm{T}}X\\right)^{-1}\\sigma^2\\,.\\] If \\(\\boldsymbol{\\varepsilon}\\sim N (\\boldsymbol{0},I_n\\sigma^2)\\), with \\(I_n\\) being the \\(n\\times n\\) identity matrix, show that the maximum likelihood estimators for \\(\\boldsymbol{\\beta}\\) coincide with the least squares estimators. Solution The method of least squares minimises the sum of squared differences between the responses and the expected values, that is, minimises the expression \\[ (\\boldsymbol{y}-X\\boldsymbol{\\beta})^{\\mathrm{T}}(\\boldsymbol{y}-X\\boldsymbol{\\beta}) = \\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- 2\\boldsymbol{\\beta}^{\\mathrm{T}}X^{\\mathrm{T}}\\boldsymbol{y}+ \\boldsymbol{\\beta}^{\\mathrm{T}}X^{\\mathrm{T}}X\\boldsymbol{\\beta}\\,. \\] Differentiating with respect to the vector \\(\\boldsymbol{\\beta}\\), we obtain \\[ \\frac{\\partial}{\\partial\\boldsymbol{\\beta}} = -2X^{\\mathrm{T}}\\boldsymbol{y}+ 2X^{\\mathrm{T}}X\\boldsymbol{\\beta}\\,. \\] Set equal to \\(\\boldsymbol{0}\\) and solve: \\[ X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} = X^{\\mathrm{T}}\\boldsymbol{y}\\Rightarrow \\hat{\\boldsymbol{\\beta}} = \\left(X^{\\mathrm{T}}X\\right)^{-1}X^{\\mathrm{T}}\\boldsymbol{y}\\,. \\] The estimator \\(\\hat{\\boldsymbol{\\beta}}\\) is unbiased: \\[ E(\\hat{\\boldsymbol{\\beta}}) = \\left(X^{\\mathrm{T}}X\\right)^{-1}X^{\\mathrm{T}}E(\\boldsymbol{y}) = \\left(X^{\\mathrm{T}}X\\right)^{-1}X^{\\mathrm{T}}X\\boldsymbol{\\beta}= \\boldsymbol{\\beta}\\,, \\] and has variance: \\[\\begin{align*} \\mbox{Var}(\\hat{\\boldsymbol{\\beta}}) &amp; =E\\left\\{ \\left[\\hat{\\boldsymbol{\\beta}} - E(\\hat{\\boldsymbol{\\beta}})\\right] \\left[\\hat{\\boldsymbol{\\beta}} - E(\\hat{\\boldsymbol{\\beta}})\\right]^{\\mathrm{T}} \\right\\}\\\\ &amp; = E\\left\\{ \\left[\\hat{\\boldsymbol{\\beta}} - \\boldsymbol{\\beta}\\right] \\left[\\hat{\\boldsymbol{\\beta}} - \\boldsymbol{\\beta}\\right]^{\\mathrm{T}} \\right\\}\\\\ &amp; = E\\left\\{ \\hat{\\boldsymbol{\\beta}}\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}} - 2\\boldsymbol{\\beta}\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}} + \\boldsymbol{\\beta}\\boldsymbol{\\beta}^{\\mathrm{T}} \\right\\}\\\\ &amp; = E\\left\\{ \\left(X^{\\mathrm{T}}X\\right)^{-1}X^{\\mathrm{T}}\\boldsymbol{y}\\boldsymbol{y}^{\\mathrm{T}}X\\left(X^{\\mathrm{T}}X\\right)^{-1} - 2\\boldsymbol{\\beta}\\boldsymbol{y}^{\\mathrm{T}}X\\left(X^{\\mathrm{T}}X\\right)^{-1} + \\boldsymbol{\\beta}\\boldsymbol{\\beta}^{\\mathrm{T}}\\right\\}\\\\ &amp; = \\left(X^{\\mathrm{T}}X\\right)^{-1}X^{\\mathrm{T}}E(\\boldsymbol{y}\\boldsymbol{y}^{\\mathrm{T}})X\\left(X^{\\mathrm{T}}X\\right)^{-1} - 2\\boldsymbol{\\beta}E(\\boldsymbol{y}^{\\mathrm{T}})X\\left(X^{\\mathrm{T}}X\\right)^{-1} + \\boldsymbol{\\beta}\\boldsymbol{\\beta}^{\\mathrm{T}}\\\\ &amp; = \\left(X^{\\mathrm{T}}X\\right)^{-1}X^{\\mathrm{T}}\\left[\\mbox{Var}(\\boldsymbol{y}) + E(\\boldsymbol{y})E(\\boldsymbol{y}^{\\mathrm{T}})\\right]X\\left(X^{\\mathrm{T}}X\\right)^{-1} - 2\\boldsymbol{\\beta}\\boldsymbol{\\beta}^{\\mathrm{T}}X^{\\mathrm{T}}X\\left(X^{\\mathrm{T}}X\\right)^{-1} + \\boldsymbol{\\beta}\\boldsymbol{\\beta}^{\\mathrm{T}}\\\\ &amp; = \\left(X^{\\mathrm{T}}X\\right)^{-1}X^{\\mathrm{T}}\\left[I_N\\sigma^2 + X\\boldsymbol{\\beta}\\boldsymbol{\\beta}^{\\mathrm{T}}X^{\\mathrm{T}}\\right]X\\left(X^{\\mathrm{T}}X\\right)^{-1} - \\boldsymbol{\\beta}\\boldsymbol{\\beta}^{\\mathrm{T}}\\\\ &amp; = \\left(X^{\\mathrm{T}}X\\right)^{-1}\\sigma^2\\,. \\end{align*}\\] As \\(\\boldsymbol{y}\\sim N\\left(X\\boldsymbol{\\beta}, I_N\\sigma^2\\right)\\), the likelihood is given by \\[ L(\\boldsymbol{\\beta}\\,; \\boldsymbol{y}) = \\left(2\\pi\\sigma^2\\right)^{-N/2}\\exp\\left\\{-\\frac{1}{2\\sigma^2}(\\boldsymbol{y}- X\\boldsymbol{\\beta})^{\\mathrm{T}}(\\boldsymbol{y}- X\\boldsymbol{\\beta})\\right\\}\\,. \\] The log-likelihood is given by \\[ l(\\boldsymbol{\\beta}\\,;\\boldsymbol{y}) = -\\frac{1}{2\\sigma^2}(\\boldsymbol{y}- X\\boldsymbol{\\beta})^{\\mathrm{T}}(\\boldsymbol{y}- X\\boldsymbol{\\beta}) + \\mbox{constant}\\,. \\] Up to a constant, this expression is \\(-1\\times\\) the least squares equations; hence maximising the log-likelihood is equivalent to minimising the least squares equation. Consider the two nested linear models \\(Y_j = \\beta_0 + \\beta_1x_{1j} + \\beta_2x_{2j} + \\ldots + \\beta_{p_1}x_{p_1j} + \\varepsilon_j\\), or \\(\\boldsymbol{y}= X_1\\boldsymbol{\\beta}_1 + \\boldsymbol{\\varepsilon}\\), \\(Y_j = \\beta_0 + \\beta_1x_{1j} + \\beta_2x_{2j} + \\ldots + \\beta_{p_1}x_{p_1j} + \\beta_{p_1+1}x_{(p_1+1)j} + \\ldots + \\beta_{p_2}x_{p_2j} + \\varepsilon_j\\), or \\(\\boldsymbol{y}= X_1\\boldsymbol{\\beta}_1 + X_2\\boldsymbol{\\beta}_2+ \\boldsymbol{\\varepsilon}\\) with \\(\\varepsilon_j\\sim N(0, \\sigma^2)\\), and \\(\\varepsilon_{j}\\), \\(\\varepsilon_{k}\\) independent \\((\\boldsymbol{\\varepsilon}\\sim N(\\boldsymbol{0},I_n\\sigma^2))\\). Construct an ANOVA table to compare model (ii) with the null model \\(Y_j=\\beta_0 + \\varepsilon_j\\). Extend this ANOVA table to compare models (i) and (ii) by further decomposing the regression sum of squares for model (ii). Hint: which residual sum of squares are you interested in to compare models (i) and (ii)? You should end up with an ANOVA table of the form Source Degrees of freedom Sums of squares Mean square Model (i) \\(p_1\\) ? ? Model (ii) \\(p_2\\) ? ? Residual \\(n-p_1-p_2-1\\) ? ? Total \\(n-1\\) \\(\\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- n\\bar{Y}^2\\) The second row of the table gives the extra sums of squares for the additional terms in fitting model (ii), over and above those in model (i). Calculate the extra sum of squares for fitting the terms in model (i), over and above those terms only in model (ii), i.e. those held in \\(X_2\\boldsymbol{\\beta}_2\\). Construct an ANOVA table containing both the extra sum of squares for the terms only in model (i) and the extra sum of squares for the terms only in model (ii). Comment on the table. Solution From lectures Source Degrees of freedom Sums of squares Mean square Regression \\(p_1+p_2\\) \\(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\) \\(\\left(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\right)/(p_1+p_2)\\) Residual \\(n-p_1-p_2-1\\) \\((\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})^{\\mathrm{T}}(\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})\\) RSS\\(/(n-p_1-p_2-1)\\) Total \\(n-1\\) \\(\\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- n\\bar{Y}^2\\) where \\[\\begin{align*} \\mbox{RSS(null) - RSS(ii)} &amp; = \\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- n\\bar{Y}^2 - (\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})^{\\mathrm{T}}(\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})\\\\ &amp; = \\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- n\\bar{Y}^2 - \\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}+ 2\\boldsymbol{y}^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}}\\\\ &amp; = 2\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\\\ &amp; = \\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\,. \\end{align*}\\] To compare model (i) with the null model, we compute \\[\\begin{align*} \\mbox{RSS(null) - RSS(i)} &amp; = \\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- N\\bar{Y}^2 - (\\boldsymbol{y}- X_1\\hat{\\boldsymbol{\\beta}}_1)^{\\mathrm{T}}(\\boldsymbol{y}- X_1\\hat{\\boldsymbol{\\beta}}_1)\\\\ &amp; = \\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1 - n\\bar{Y}^2\\,. \\end{align*}\\] To compare models (i) and (ii), we compare them both to the null model, and look at the difference between these comparisons: \\[\\begin{align*} \\mbox{[RSS(null) - RSS(ii)] - [RSS(null) - RSS(i)]} &amp; = \\mbox{RSS(i) - RSS(ii)}\\\\ &amp; = (\\boldsymbol{y}- X_1\\hat{\\boldsymbol{\\beta}}_1)^{\\mathrm{T}}(\\boldsymbol{y}- X_1\\hat{\\boldsymbol{\\beta}}_1) - (\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})^{\\mathrm{T}}(\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})\\\\ &amp; = \\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1\\,. \\end{align*}\\] Source Degrees of freedom Sums of squares Mean square Regression \\(p_1+p_2\\) \\(\\hat{\\boldsymbol{\\beta}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\) \\(\\left(\\hat{\\boldsymbol{\\beta}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\right)/(p_1+p_2)\\) Model (i) \\(p_1\\) \\(\\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1 - n\\bar{Y}^2\\) \\(\\left(\\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1 - n\\bar{Y}^2\\right)/p_1\\) Extra due to Model (ii) \\(p_2\\) \\(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1\\) \\(\\left(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1\\right)/p_2\\) Residual \\(n-p_1-p_2-1\\) \\((\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})^{\\mathrm{T}}(\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})\\) RSS\\(/(n-p_1-p_2-1)\\) Total \\(n-1\\) \\(\\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- n\\bar{Y}^2\\) By definition, the Model (i) SS and the Extra SS for Model (ii) sum to the Regression SS. The extra sum of squares for the terms in model (i) over and above those in model (ii) are obtained through comparison of the models ia. \\(\\boldsymbol{y}= X_2\\boldsymbol{\\beta}_2 + \\boldsymbol{\\varepsilon}\\), iia. \\(\\boldsymbol{y}= X_1\\boldsymbol{\\beta}_1 + X_2\\boldsymbol{\\beta}_2+ \\boldsymbol{\\varepsilon}= X\\boldsymbol{\\beta}+ \\varepsilon\\) Extra sum of squares for model (iia): \\[\\begin{align*} \\mbox{[RSS(null) - RSS(iia)] - [RSS(null) - RSS(ia)]} &amp; = \\mbox{RSS(ia) - RSS(iia)}\\\\ &amp; = (\\boldsymbol{y}- X_2\\hat{\\boldsymbol{\\beta}}_2)^{\\mathrm{T}}(\\boldsymbol{y}- X_2\\hat{\\boldsymbol{\\beta}}_2) - (\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})^{\\mathrm{T}}(\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})\\\\ &amp; = \\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_2^{\\mathrm{T}}X_2^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\beta}}_2\\,. \\end{align*}\\] Hence, an ANOVA table for the extra sums of squares is given by Source Degrees of freedom Sums of squares Mean square Regression \\(p_1+p_2\\) \\(\\hat{\\boldsymbol{\\beta}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\) \\(\\left(\\hat{\\boldsymbol{\\beta}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - n\\bar{Y}^2\\right)/(p_1+p_2)\\) Extra Model (i) \\(p_1\\) \\(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_2^{\\mathrm{T}}X_2^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\beta}}_2\\) \\(\\left(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_2^{\\mathrm{T}}X_2^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\beta}}_2\\right)/p_1\\) Extra Model (ii) \\(p_2\\) \\(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1\\) \\(\\left(\\hat{\\boldsymbol{\\beta}}^{\\mathrm{T}}X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} - \\hat{\\boldsymbol{\\beta}}_1^{\\mathrm{T}}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}}_1\\right)/p_2\\) Residual \\(n-p_1-p_2-1\\) \\((\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})^{\\mathrm{T}}(\\boldsymbol{y}- X\\hat{\\boldsymbol{\\beta}})\\) RSS\\(/(n-p_1-p_2-1)\\) Total \\(n-1\\) \\(\\boldsymbol{y}^{\\mathrm{T}}\\boldsymbol{y}- n\\bar{Y}^2\\) Note that for these adjusted sums of squares, in general the extra sum of squares for model (i) and (ii) do not sum to the regression sum of squares. This will only be the case if the columns of \\(X_1\\) and \\(X_2\\) are mutually orthogonal, i.e. \\(X_1^{\\mathrm{T}}X_2 = \\boldsymbol{0}\\). References "],["crd.html", "Chapter 2 Completely randomised designs 2.1 A unit-treatment linear model 2.2 The partitioned linear model 2.3 Reduced normal equations for the CRD 2.4 Contrasts 2.5 Treatment contrast estimators in the CRD 2.6 Analysing CRDs in R 2.7 Multiple comparisons 2.8 Impact of design choices on estimation 2.9 Exercises", " Chapter 2 Completely randomised designs The simplest form of experiment we will consider compares \\(t\\) different unstructured treatments. By unstructured, we mean the treatments form a discrete collection, not related through the settings of other experimental features (compare with factorial experiments in Chapter 4). We also make the assumption that there are no restrictions in the randomisation of treatments to experimental units (compare with Chapter 3 on blocking). A designs for such an experiment is therefore called a completely randomised design (CRD). Example 2.1 Pulp experiment (Wu and Hamada, 2009, ch. 2) In a paper pulping mill, an experiment was run to examine differences between the reflectance (brightness; ratio of amount of light leaving a target to the amount of light striking the target) of sheets of pulp made by \\(t=4\\) operators. The data are given in Table 2.1 below. pulp &lt;- data.frame(operator = rep(factor(1:4), 5), repetition = rep(1:5, rep(4, 5)), reflectance = c(59.8, 59.8, 60.7, 61.0, 60.0, 60.2, 60.7, 60.8, 60.8, 60.4, 60.5, 60.6, 60.8, 59.9, 60.9, 60.5, 59.8, 60.0, 60.3, 60.5) ) knitr::kable( tidyr::pivot_wider(pulp, names_from = operator, values_from = reflectance)[, -1], col.names = paste(&quot;Operator&quot;, 1:4), caption = &quot;Pulp experiment: reflectance values (unitless) from four different operators.&quot; ) Table 2.1: Pulp experiment: reflectance values (unitless) from four different operators. Operator 1 Operator 2 Operator 3 Operator 4 59.8 59.8 60.7 61.0 60.0 60.2 60.7 60.8 60.8 60.4 60.5 60.6 60.8 59.9 60.9 60.5 59.8 60.0 60.3 60.5 The experiment has one factor (operator) with four levels (sometimes called a one-way layout). The CRD employed has equal replication of each treatment (operator). We can informally compare the responses from these four treatments graphically. boxplot(reflectance ~ operator, data = pulp) Figure 2.1: Pulp experiment: distributions of reflectance from the four operators. Figure 2.1 shows that, relative to the variation, there may be a difference in the mean response between treatments 1 and 2, and 3 and 4. In this chapter, we will see how to make this comparison formally using linear models, and to assess how the choice of design impacts our results. Throughout this chapter we will assume the \\(i\\)th treatment is applied to \\(n_i\\) experimental unit, with total number of runs \\(n = \\sum_{i=1}^t n_i\\) in the experiment. 2.1 A unit-treatment linear model An appropriate, and common, model to describe data from such experiments when the response is continuous is given by \\[\\begin{equation} y_{ij} = \\mu + \\tau_i + \\varepsilon_{ij}\\,, \\quad i = 1, \\ldots, t; j = 1, \\ldots, n_i\\,, \\tag{2.1} \\end{equation}\\] where \\(y_{ij}\\) is the response from the \\(j\\)th application of treatment \\(i\\), \\(\\mu\\) is a constant parameter, \\(\\tau_i\\) is the effect of the \\(i\\)th treatment, and \\(\\varepsilon_{ij}\\) is the random individual effect from each experimental unit with \\(E(\\varepsilon_{ij})=0\\) and \\(\\mathrm{Var}(\\varepsilon_{ij}) = \\sigma^2\\). All random errors are assumed independent and here we also assume \\(\\varepsilon_{ij} \\sim N(0, \\sigma^2)\\). Model (2.1) assumes that each treatment can be randomly allocated to one of the \\(n\\) experimental units, and that the response observed is independent of the allocation of all the other treatments (the stable unit treatment value assumption or SUTVA). Why is this model appropriate and commonly used? The expected response from the application of the \\(i\\)th treatment is \\[ E(y_{ij}) = \\mu + \\tau_i\\,. \\] The parameter \\(\\mu\\) can be thought of as representing the impact of many different features particular to this experiment but common to all units, and \\(\\tau_i\\) is the deviation due to applying treatment \\(i\\). From the applicable of two different hypothetical experiments, A and B, the expected response from treatment \\(i\\) may be different due to a different overall mean. From experiment A: \\[ E(y_{ij}) = \\mu_{\\mathrm{A}} + \\tau_i\\,. \\] From experiment B: \\[ E(y_{ij}) = \\mu_{\\mathrm{B}} + \\tau_i\\,. \\] But the difference between treatments \\(k\\) and \\(l\\) (\\(k, l = 1,\\ldots, t\\)) \\[\\begin{align*} E(y_{kj}) - E(y_{lj}) &amp; = \\mu_A + \\tau_k - \\mu_A - \\tau_l \\\\ &amp; = \\tau_k - \\tau_l\\,, \\end{align*}\\] is constant across different experiments. This concept of comparison underpins most design of experiments, and will be applied throughout this module. 2.2 The partitioned linear model In matrix form, we can write model (2.1) as \\[ \\boldsymbol{y}= X_1\\mu + X_2\\boldsymbol{\\tau}+ \\boldsymbol{\\varepsilon}\\,, \\] where \\(X_1 = \\boldsymbol{1}_n\\), the \\(n\\)-vector with every entry equal to one, \\[ X_2 = \\bigoplus_{i = 1}^t \\boldsymbol{1}_{n_i} = \\begin{bmatrix} \\boldsymbol{1}_{n_1} &amp; \\boldsymbol{0}_{n_1} &amp; \\cdots &amp; \\boldsymbol{0}_{n_1} \\\\ \\boldsymbol{0}_{n_2} &amp; \\boldsymbol{1}_{n_2} &amp; \\cdots &amp; \\boldsymbol{0}_{n_2} \\\\ \\vdots &amp; &amp; \\ddots &amp; \\vdots \\\\ \\boldsymbol{0}_{n_t} &amp; \\boldsymbol{0}_{n_t} &amp; \\cdots &amp; \\boldsymbol{1}_{n_t} \\\\ \\end{bmatrix}\\,, \\] with \\(\\bigoplus\\) denoting “direct sum”, \\(\\boldsymbol{0}_{n_i}\\) is the \\(n_i\\)-vector with every entry equal to zero, \\(\\boldsymbol{\\tau}= [\\tau_1, \\ldots, \\tau_t]^{\\mathrm{T}}\\) and \\(\\boldsymbol{\\varepsilon}= [\\varepsilon_{11}, \\ldots, \\varepsilon_{tn_t}]^{\\mathrm{T}}\\). Why are we partitioning the model? Going back to our discussion of the role of \\(\\mu\\) and \\(\\tau_i\\), it is clear that we not interested in estimating \\(\\mu\\), which represents an experiment-specific contribution to the expected mean. Our only interest is in estimating the (differences between the) \\(\\tau_i\\). Hence, we can treat \\(\\mu\\) as a nuisance parameter. If we define \\(X = [X_1\\, \\vert\\, X_2]\\) and \\(\\boldsymbol{\\beta}^{\\mathrm{T}} = [\\mu \\vert \\boldsymbol{\\tau}^{\\mathrm{T}}]\\), we can write the usual least squares equations \\[\\begin{equation} X^{\\mathrm{T}}X\\hat{\\boldsymbol{\\beta}} = X^{\\mathrm{T}}\\boldsymbol{y} \\tag{2.2} \\end{equation}\\] as a system of two matrix equations \\[\\begin{align*} X_1^{\\mathrm{T}}X_1\\hat{\\mu} + X_1^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\tau}} &amp; = X_1^{\\mathrm{T}}\\boldsymbol{y}\\\\ X_2^{\\mathrm{T}}X_1\\hat{\\mu} + X_2^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\tau}} &amp; = X_2^{\\mathrm{T}}\\boldsymbol{y}\\,. \\\\ \\end{align*}\\] Assuming \\((X_1^{\\mathrm{T}}X_1)^{-1}\\) exists, which it does in this case, we can pre-multiply the first of these equations by \\(X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}\\) and subtract it from the second equation to obtain \\[\\begin{align*} X_2^{\\mathrm{T}}[I_n - X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}]X_1\\hat{\\mu} &amp; + X_2^{\\mathrm{T}}[I_n - X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}]X_2\\hat{\\boldsymbol{\\tau}} \\\\ &amp; = X_2^{\\mathrm{T}}[I_n - X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}]\\boldsymbol{y}\\,. \\end{align*}\\] Writing \\(H_1 = X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\), we obtain \\[\\begin{equation} X_2^{\\mathrm{T}}[I_n - H_1]X_1\\hat{\\mu} + X_2^{\\mathrm{T}}[I_n - H_1]X_2\\hat{\\boldsymbol{\\tau}} = X_2^{\\mathrm{T}}[I_n - H_1]\\boldsymbol{y}\\,. \\tag{2.3} \\end{equation}\\] The matrix \\(H_1\\) is a “hat” matrix for a linear model containing only the term \\(\\mu\\), and hence \\(H_1X_1 = X_1\\) (see MATH2010 or STAT6123). Hence the first term in (2.3) is zero, and we obtain the reduced normal equations for \\(\\boldsymbol{\\tau}\\): \\[\\begin{equation} X_2^{\\mathrm{T}}[I_n - H_1]X_2\\hat{\\boldsymbol{\\tau}} = X_2^{\\mathrm{T}}[I_n - H_1]\\boldsymbol{y}\\,. \\tag{2.4} \\end{equation}\\] Note that the solutions from (2.4) are not different from the solution to \\(\\hat{\\boldsymbol{\\tau}}\\) that would be obtained from solving (2.2); equation (2.4) is simply a re-expression, where we have eliminated the nuisance parameter \\(\\mu\\). This fact means that we rarely need to solve (2.4) explicitly. Recalling that for a hat matrix, \\(I_n - H_1\\) is idempotent and symmetric (see MATH2010 or MATH6174), if we define \\[ X_{2|1} = (I_n - H_1)X_2\\,, \\] then we can rewrite equation (2.4) as \\[\\begin{equation} X_{2|1}^{\\mathrm{T}}X_{2|1}\\hat{\\boldsymbol{\\tau}} = X_{2|1}^{\\mathrm{T}}\\boldsymbol{y}\\,, \\tag{2.5} \\end{equation}\\] which are the normal equations for a linear model with expectation \\(E(\\boldsymbol{y}) = X_{2|1}\\boldsymbol{\\tau}\\). 2.3 Reduced normal equations for the CRD For the CRD discussed in this chapter, \\(X_1^{\\mathrm{T}}X_1 = n\\), the total number of runs in the experiment8. Hence \\((X_1^{\\mathrm{T}}X_1)^{-1} = 1/n\\) and \\(H_1 = \\frac{1}{n}J_n\\), with \\(J_n\\) the \\(n\\times n\\) matrix with all entries equal to 1. The adjusted model matrix then has the form \\[\\begin{align} X_{2|1} &amp; = (I_n - H_1)X_2 \\nonumber\\\\ &amp; = X_2 - \\frac{1}{n}J_nX_2 \\nonumber\\\\ &amp; = X_2 - \\frac{1}{n}[n_1\\boldsymbol{1}_n \\vert \\cdots \\vert n_t\\boldsymbol{1}_n]\\,. \\tag{2.6} \\end{align}\\] That is, every column of \\(X_2\\) has been adjusted by the subtraction of the column mean from each entry9. Also notice that each row of \\(X_{2|1}\\) has a row-sum equal to zero (\\(= 1 - \\sum_{i=1}^tn_t/n\\)). Hence, \\(X_{2|1}\\) is not of full column rank, and so the reduced normal equations do not have a unique solution10. Although (2.5), and hence, (2.2), have no unique solution11, it can be shown that both \\(\\widehat{X_{2|1}\\boldsymbol{\\tau}}\\) and \\(\\widehat{X\\boldsymbol{\\beta}}\\) have unique solutions. Hence fitted values \\(\\hat{\\boldsymbol{y}} = \\widehat{X\\boldsymbol{\\beta}}\\) and the residual sum of squares \\[ RSS = \\left(\\boldsymbol{y}- \\widehat{X\\boldsymbol{\\beta}}\\right)^{\\mathrm{T}}\\left(\\boldsymbol{y}- \\widehat{X\\boldsymbol{\\beta}}\\right) \\] are both uniquely defined for any solution to (2.2). That is, every solution to the normal equations leads to the same fitted values and residual sum of squares. In MATH2010 and STAT6123 we fitted models with categorical variables by defining a set of dummy variables and estimating a reduced model. Here, we will take a slightly different approach and study which combinations of parameters from (2.1) are estimable, and in particular which linear combinations of the treatment parameters \\(\\tau_i\\) we can estimate. Let’s study equation (2.5) in more detail. We have \\[\\begin{align*} X^{\\mathrm{T}}_{2|1}X_{2|1} &amp; = X_2^{\\mathrm{T}}(I_n - H_1)X_2 \\\\ &amp; = X_2^{\\mathrm{T}}X_2 - X_2^{\\mathrm{T}}H_1X_2 \\\\ &amp; = \\mathrm{diag}(\\boldsymbol{n}) - \\frac{1}{n}X_2^{\\mathrm{T}}J_nX_2 \\\\ &amp; = \\mathrm{diag}(\\boldsymbol{n}) - \\frac{1}{n}\\boldsymbol{n}\\boldsymbol{n}^{\\mathrm{T}}\\,, \\end{align*}\\] where \\(\\boldsymbol{n}^{\\mathrm{T}} = (n_1, \\ldots, n_t)\\). Hence, the reduced normal equations become \\[\\begin{align} \\left[\\mathrm{diag}(\\boldsymbol{n}) - \\frac{1}{n}\\boldsymbol{n}\\boldsymbol{n}^{\\mathrm{T}}\\right]\\hat{\\boldsymbol{\\tau}} &amp; = X_2^{\\mathrm{T}}\\boldsymbol{y}- \\frac{1}{n}X_2^{\\mathrm{T}}J_n\\boldsymbol{y}\\\\ &amp; = X_2^{\\mathrm{T}}\\boldsymbol{y}- \\boldsymbol{n}\\bar{y}_{..}\\,, \\tag{2.7} \\end{align}\\] where \\(\\bar{y}_{..} = \\frac{1}{n}\\sum_{i = 1}^t\\sum_{j = 1}^{n_i} y_{ij}\\), i.e. the overall average of the observations from the experiment. From (2.7) we obtain a system of \\(t\\) equations, each having the form \\[\\begin{equation} \\hat{\\tau}_i - \\hat{\\tau}_w = \\bar{y}_{i.} - \\bar{y}_{..}\\,, \\tag{2.8} \\end{equation}\\] where \\(\\hat{\\tau}_w = \\frac{1}{n}\\sum_{i=1}^tn_i\\hat{\\tau}_i\\) and \\(\\bar{y}_{i.} = \\frac{1}{n_i}\\sum_{j = 1}^{n_i}y_{ij}\\) \\((i = 1, \\ldots, t)\\). These \\(t\\) equations are not independent; when multiplied by the \\(n_i\\), they sum to zero due to the linear dependency between the columns of \\(X_{2|1}\\). Hence, there is no unique solution to \\(\\hat{\\boldsymbol{\\tau}}\\) from equation (2.7). However, we can estimate certain linear combinations of the \\(\\tau_i\\), called contrasts. 2.4 Contrasts Definition 2.1 A treatment contrast is a linear combination \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\) with coefficient vector \\(\\boldsymbol{c}^{\\mathrm{T}} = (c_1,\\ldots, c_t)\\) such that \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{1} = 0\\); that is, \\(\\sum_{i = 1}^t c_i = 0\\). For example, assume we have \\(t = 3\\) treatments, then the following vectors \\(\\boldsymbol{c}\\) all define contrasts: \\(\\boldsymbol{c}^{\\mathrm{T}} = (1, -1, 0)\\), \\(\\boldsymbol{c}^{\\mathrm{T}} = (1, 0, -1)\\), \\(\\boldsymbol{c}^{\\mathrm{T}} = (0, 1, -1)\\). In fact, they define all \\({3\\choose 2} = 3\\) pairwise comparisons between treatments. The following are also contrasts: \\(\\boldsymbol{c}^{\\mathrm{T}} = (2, -1, -1)\\), \\(\\boldsymbol{c}^{\\mathrm{T}} = (0.5, -1, 0.5)\\), each comparing the sum, or average, of expected responses from two treatments to the expected response from the remaining treatment. The following are not contrasts, as \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{1} \\ne 0\\): \\(\\boldsymbol{c}^{\\mathrm{T}} = (2, -1, 0)\\), \\(\\boldsymbol{c}^{\\mathrm{T}} = (1, 0, 0)\\), with the final example once again demonstrating that we cannot estimate the individual \\(\\tau_i\\). 2.5 Treatment contrast estimators in the CRD We estimate a treatment contrast \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\) in the CRD via linear combinations of equations (2.8): \\[\\begin{align*} &amp; \\sum_{i=1}^t c_i\\hat{\\tau}_i - \\sum_{i=1}^tc_i\\hat{\\tau}_w = \\sum_{i=1}^tc_i\\bar{y}_{i.} - \\sum_{i=1}^tc_i\\bar{y}_{..} \\\\ \\Rightarrow &amp; \\sum_{i=1}^t c_i\\hat{\\tau}_i = \\sum_{i=1}^tc_i\\bar{y}_{i.}\\,, \\end{align*}\\] as \\(\\sum_{i=1}^tc_i\\hat{\\tau}_w = \\sum_{i=1}^tc_i\\bar{y}_{..} = 0\\), as \\(\\sum_{i=1}^tc_i = 0\\). Hence, the unique estimator of the contrast \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\) has the form \\[ \\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}} = \\sum_{i=1}^tc_i\\bar{y}_{i.}\\,. \\] That is, we estimate the contrast in the treatment effects by the corresponding contrast in the treatment means. The variance of this estimator is straightforward to obtain: \\[\\begin{align*} \\mathrm{var}\\left(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}}\\right) &amp; = \\sum_{i=1}^tc_i^2\\mathrm{var}(\\bar{y}_{i.}) \\\\ &amp; = \\sigma^2\\sum_{i=1}^tc_i^2/n_i\\,, \\end{align*}\\] as, under our model assumptions, each \\(\\bar{y}_{i.}\\) is an average of independent observations with variance \\(\\sigma^2\\). Similarly, from model (2.1) we can derive the distribution of \\(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}}\\) as \\[ \\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}} \\sim N\\left(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}, \\sigma^2\\sum_{i=1}^tc_i^2/n_i\\right)\\,. \\] Confidence intervals and hypothesis tests for \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\) can be constructed/conducted using this distribution, e.g. a \\(100(1-\\frac{\\alpha}{2})\\)% confidence interval: \\[ \\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau} \\in \\sum_{i=1}^tc_i\\bar{y}_{i.} \\pm t_{n-t, 1-\\frac{\\alpha}{2}}s\\sqrt{\\sum_{i=1}^tc_i^2/n_i}\\,, \\] where \\(t_{n-t, 1-\\frac{\\alpha}{2}}\\) is the \\(1-\\frac{\\alpha}{2}\\) quantile of a \\(t\\)-distribution with \\(n-t\\) degrees of freedom and \\[\\begin{equation} s^2 = \\frac{1}{n-t}\\sum_{i=1}^t\\sum_{j=1}^{n_i}(y_{ij} - \\bar{y}_{i.})^2 \\tag{2.9} \\end{equation}\\] is the estimate of \\(\\sigma^2\\). the hypothesis \\(H_0: \\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau} = 0\\) against the two-sided alternative \\(H_1: \\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau} \\ne 0\\) is rejected using a test of with confidence level \\(1-\\alpha/2\\) if \\[ \\frac{|\\sum_{i=1}^tc_i\\bar{y}_{i.}|}{s\\sqrt{\\sum_{i=1}^tc_i^2/n_i}} &gt; t_{n-t, 1-\\frac{\\alpha}{2}}\\,. \\] 2.6 Analysing CRDs in R Let’s return to Example 2.1. knitr::kable( tidyr::pivot_wider(pulp, names_from = operator, values_from = reflectance)[, -1], col.names = paste(&quot;Operator&quot;, 1:4), caption = &quot;Pulp experiment: reflectance values (unitless) from four different operators.&quot; ) Table 2.2: Pulp experiment: reflectance values (unitless) from four different operators. Operator 1 Operator 2 Operator 3 Operator 4 59.8 59.8 60.7 61.0 60.0 60.2 60.7 60.8 60.8 60.4 60.5 60.6 60.8 59.9 60.9 60.5 59.8 60.0 60.3 60.5 Clearly, we could directly calculate, and then compare, mean responses for each operator. However, there are (at least) two other ways we can proceed which use the fact we are fitting a linear model. These will be useful when we consider more complex models. Using pairwise.t.test. with(pulp, pairwise.t.test(reflectance, operator, p.adjust.method = &#39;none&#39;)) ## ## Pairwise comparisons using t tests with pooled SD ## ## data: reflectance and operator ## ## 1 2 3 ## 2 0.396 - - ## 3 0.084 0.015 - ## 4 0.049 0.008 0.775 ## ## P value adjustment method: none This function performs hypothesis tests for all pairwise treatment comparisons (with a default confidence level of 0.95). Here we can see that operators 1 and 4, 2 and 3, and 2 and 4 have statistically significant differences. Using lm and the emmeans package. pulp.lm &lt;- lm(reflectance ~ operator, data = pulp) anova(pulp.lm) ## Analysis of Variance Table ## ## Response: reflectance ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## operator 3 1.34 0.447 4.2 0.023 * ## Residuals 16 1.70 0.106 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 pulp.emm &lt;- emmeans::emmeans(pulp.lm, ~ operator) pairs(pulp.emm, adjust = &#39;none&#39;) ## contrast estimate SE df t.ratio p.value ## 1 - 2 0.18 0.206 16 0.873 0.3955 ## 1 - 3 -0.38 0.206 16 -1.843 0.0839 ## 1 - 4 -0.44 0.206 16 -2.134 0.0486 ## 2 - 3 -0.56 0.206 16 -2.716 0.0153 ## 2 - 4 -0.62 0.206 16 -3.007 0.0083 ## 3 - 4 -0.06 0.206 16 -0.291 0.7748 Here, we have first fitted the linear model object. The lm function, by default, will have set up dummy variables with the first treatment (operator) as a baseline (see MATH2010 or STAT6123). We then take the intermediate step of calculating the ANOVA table for this experiment, and use an F-test to compare the model accounting for operator differences to the null model; there are differences between operators at the 5% significance level, The choice of dummy variables in the linear model is unimportant; any set could be used12, as in the next line we use the emmeans function (from the package of the same name) to specify that we are interested in estimating contrasts in the factor operator (which specifies our treatments in this experiment). Finally, the pairs command performs hypothesis tests for all pairwise comparisons between the four treatments. The results are the same as those obtained from using pairwise.t.test. Our preferred approach is using method 2 (lm and emmeans), for four main reasons: The function contrasts in the emmeans package can be used to estimate arbitrary treatment contrasts (see help(\"contrast-methods\")). # same as `pairs` above emmeans::contrast(pulp.emm, &quot;pairwise&quot;, adjust = &quot;none&quot;) ## contrast estimate SE df t.ratio p.value ## 1 - 2 0.18 0.206 16 0.873 0.3955 ## 1 - 3 -0.38 0.206 16 -1.843 0.0839 ## 1 - 4 -0.44 0.206 16 -2.134 0.0486 ## 2 - 3 -0.56 0.206 16 -2.716 0.0153 ## 2 - 4 -0.62 0.206 16 -3.007 0.0083 ## 3 - 4 -0.06 0.206 16 -0.291 0.7748 # estimating single contrast c = (1, -.5, -.5) # comparing operator 1 with operators 2 and 3 contrast1v23.emmc &lt;- function(levs) data.frame(&#39;t1 v avg t2 t3&#39; = c(1, -.5, -.5, 0)) emmeans::contrast(pulp.emm, &#39;contrast1v23&#39;) ## contrast estimate SE df t.ratio p.value ## t1.v.avg.t2.t3 -0.1 0.179 16 -0.560 0.5832 It more easily generalises to the more complicated models we will see in Chapter 3. It explicitly acknowledges that we have fitted a linear model, and so encourages us to check the model assumptions (see Exercise 3). It is straightfoward to apply adjustments for multiple comparisons. 2.7 Multiple comparisons When we perform hypothesis testing, we choose the critical region (i.e. the rule that decides if we reject \\(H_0\\)) to control the probability of a type I error; that is, we control the probability of incorrectly rejecting \\(H_0\\). If we need to test multiple hypotheses, e.g. to test all pairwise differences, we need to consider the overall probability of incorrectly rejecting one or more null hypothesis. This is called the experiment-wise or family-wise error rate. For Example 2.1, there are \\({4 \\choose 2} = 6\\) pairwise comparisons. Under the assumption that all tests are independent13, assuming each individual test has type I error 0.05, the experiment-wise type I error rate is given by: alpha &lt;- 0.05 1 - (1 - alpha)^6 ## [1] 0.2649 An experiment-wise error rate of 0.2649 is substantially greater than 0.05. Hence, we would expect to make many more type I errors than may be desirable. xkcd has a fun example: alpha &lt;- 0.05 1 - (1 - alpha)^20 ## [1] 0.6415 Therefore it is usually desirable to maintain some control of the experiment-wise type I error rate. We will consider two methods. The Bonferroni method. An upper bound on the experiment-wise type I error rate for testing \\(k\\) hypotheses can be shown to be \\[\\begin{align*} P(\\mbox{wrongly reject at least one of } H_{0}^1, \\ldots, H_{0}^k) = &amp; P\\left(\\bigcup_{i=1}^{k}\\{\\mbox{wrongly reject } H_{0}^i\\}\\right) \\\\ &amp; \\leq \\sum_{i=1}^{k}\\underbrace{P(\\mbox{wrongly reject } H_{0}^i)}_{\\leq \\alpha} \\\\ &amp; \\leq k\\alpha\\,. \\end{align*}\\] Hence a conservative14 adjustment for multiple comparisons is to test each hypothesis at size \\(\\alpha / k\\), i.e. for the CRD compare to the quantile \\(t_{n-t, 1-\\frac{\\alpha}{2k}}\\) (or multiply each individual p-value by \\(k\\)). For Example 2.1, we can test all pairwise comparisons, each at size \\(\\alpha/k\\) using the adjustment argument in pairs. pairs(pulp.emm, adjust = &#39;bonferroni&#39;) ## contrast estimate SE df t.ratio p.value ## 1 - 2 0.18 0.206 16 0.873 1.0000 ## 1 - 3 -0.38 0.206 16 -1.843 0.5034 ## 1 - 4 -0.44 0.206 16 -2.134 0.2918 ## 2 - 3 -0.56 0.206 16 -2.716 0.0915 ## 2 - 4 -0.62 0.206 16 -3.007 0.0501 ## 3 - 4 -0.06 0.206 16 -0.291 1.0000 ## ## P value adjustment: bonferroni method for 6 tests Now, only one comparison is significant at an experiment-wise type I error rate of \\(\\alpha = 0.05\\) (operators 2 and 4). Tukey’s method. An alternative approach that gives an exact experiment-wise error rate of \\(100\\alpha\\)% compares the \\(t\\) statistic to a critical value from the studentised range distribution15, given by \\(\\frac{1}{\\sqrt{2}}q_{t, n-t, 1-\\alpha}\\) with \\(q_{t, n-t, 1-\\alpha}\\) the \\(1-\\alpha\\) quantile from the studentised range distribution (available in R as qtukey). For Example 2.1: pairs(pulp.emm) ## contrast estimate SE df t.ratio p.value ## 1 - 2 0.18 0.206 16 0.873 0.8185 ## 1 - 3 -0.38 0.206 16 -1.843 0.2903 ## 1 - 4 -0.44 0.206 16 -2.134 0.1845 ## 2 - 3 -0.56 0.206 16 -2.716 0.0658 ## 2 - 4 -0.62 0.206 16 -3.007 0.0377 ## 3 - 4 -0.06 0.206 16 -0.291 0.9911 ## ## P value adjustment: tukey method for comparing a family of 4 estimates The default adjustment in the pairs function is the Tukey method. Comparing the p-values for each comparison using unadjusted t-tests, the Boneferroni and Tukey methods: pairs.u &lt;- pairs(pulp.emm, adjust = &#39;none&#39;) pairs.b &lt;- pairs(pulp.emm, adjust = &#39;bonferroni&#39;) pairs.t &lt;- pairs(pulp.emm) data.frame(transform(pairs.b)[, 1:5], Bonf.p.value = transform(pairs.b)[, 6], Tukey.p.value = transform(pairs.t)[, 6], unadjust.p.value = transform(pairs.u)[, 6]) ## contrast estimate SE df t.ratio Bonf.p.value Tukey.p.value ## 1 1 - 2 0.18 0.2062 16 0.8731 1.00000 0.81854 ## 2 1 - 3 -0.38 0.2062 16 -1.8433 0.50336 0.29030 ## 3 1 - 4 -0.44 0.2062 16 -2.1343 0.29182 0.18448 ## 4 2 - 3 -0.56 0.2062 16 -2.7164 0.09150 0.06579 ## 5 2 - 4 -0.62 0.2062 16 -3.0074 0.05009 0.03767 ## 6 3 - 4 -0.06 0.2062 16 -0.2910 1.00000 0.99108 ## unadjust.p.value ## 1 0.395509 ## 2 0.083893 ## 3 0.048637 ## 4 0.015251 ## 5 0.008349 ## 6 0.774758 Although the decision on which hypotheses to reject (comparson 2 - 4) is the same here for both methods, the p-values from the Bonferroni method are all larger, reflecting its more conservative nature. 2.8 Impact of design choices on estimation Recall from Section 2.5 that the width of a confidence interval for a contrast \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\) is given by \\(2t_{n-t, 1-\\frac{\\alpha}{2}}s\\sqrt{\\sum_{i=1}^tc_i^2/n_i}\\). The expectation of the square of this quantity is given by \\[ 4t^2_{n-t, 1-\\frac{\\alpha}{2}}\\sigma^2\\sum_{i=1}^tc_i^2/n_i\\,, \\] as \\(E(s^2) = \\sigma^2\\). It is intuitive that a good design should have small values of the square root of this quantity (divided by \\(2\\sigma\\)), \\[ t_{n-t, 1-\\frac{\\alpha}{2}}\\sqrt{\\sum_{i=1}^tc_i^2/n_i}\\,, \\] which can be achieved either by increasing \\(n\\), and hence reducing the size of the \\(t\\)-quantile, or for choice of the \\(n_i\\) for a fixed \\(n\\), i.e. through choice of replication of each treatment. 2.8.1 Optimal treatment allocation It is quite common that although the total number, \\(n\\), of runs in the experiment may be fixed, the number \\(n_1, n_2, \\ldots, n_t\\) applied to the different treatments is under the experimenter’s control. Choosing \\(n_1, n_2\\) subject to \\(n_1+n_2 = n\\) was the first optimal design problem we encountered in Chapter 1. Assume interest lies in estimating the set of \\(p\\) contrasts \\(\\boldsymbol{c}_1^{\\mathrm{T}}\\boldsymbol{\\tau}, \\ldots, \\boldsymbol{c}_p^{\\mathrm{T}}\\boldsymbol{\\tau}\\), with \\(\\boldsymbol{c}_l^{\\mathrm{T}} = (c_{l1}, \\ldots, c_{lt})\\). One useful measure of the overall quality of the estimators of these \\(p\\) contrasts is the average variance, given by \\[ \\sigma^2\\sum_{l=1}^p\\sum_{i=1}^tc_{li}^2/n_i\\,. \\] So we will minimise this variance by allocating larger values of \\(n_i\\) to the treatments with correspondingly larger values of the contrast coefficients \\(c_{li}\\). Therefore an approach to optimal allocation is to choose \\(\\boldsymbol{n} = (n_1, \\ldots, n_t)^{\\mathrm{T}}\\) so as to \\[\\begin{equation} \\mbox{minimise} \\quad \\phi(\\boldsymbol{n}) = \\sum_{l=1}^p\\sum_{i=1}^tc_{li}^2/n_i\\,\\qquad \\mbox{subject to} \\quad \\sum_{i=1}^tn_i = n\\,. \\tag{2.10} \\end{equation}\\] This is a discrete optimisation problem (the \\(n_i\\) are integers). It is usually easier to solve the relaxed problem, where we allow continuous \\(0\\le n_i \\le n\\), and round the resulting solution to obtain integers. There is no guarantee that such a rounded allocation will actually be the optimal integer-valued solution, but it is usually fairly close. To solve the continuous version of (2.10) we will use the method of Lagrange mutliplers, where we define the function \\[ h(\\boldsymbol{n}, \\lambda) = \\phi(\\boldsymbol{n}) + \\lambda\\left(\\sum_{i=1}^tn_i - n\\right)\\,, \\] introducing the new scalar variable \\(\\lambda\\), and solve the set of \\(t+1\\) equations: \\[\\begin{align*} \\frac{\\partial h}{\\partial n_1} &amp; = 0 \\\\ \\vdots &amp; \\\\ \\frac{\\partial h}{\\partial n_t} &amp; = 0 \\\\ \\frac{\\partial h}{\\partial \\lambda} &amp; = 0\\,. \\end{align*}\\] In this case, we have \\[\\begin{equation} \\frac{\\partial h}{\\partial n_i} = -\\sum_{l=1}^pc_{li}^2/n_i^2 + \\lambda = 0\\,,\\quad i=1,\\ldots t, \\tag{2.11} \\end{equation}\\] and \\[ \\frac{\\partial h}{\\partial \\lambda} = \\sum_{i=1}^t n_i - n = 0\\,. \\] This last equation ensures \\(\\sum_{i=1}^tn_i = n\\). From the \\(t\\) equations described by (2.11), we get \\[ n_i \\propto \\sqrt{\\sum_{l=1}^pc_{li}^2} \\] We don’t need to explicitly solve for \\(\\lambda\\) to find the normalising constant for each \\(n_i\\). As we know \\(\\sum_{i=1}^tn_i = n\\), we obtain, \\[\\begin{equation} n_i = \\frac{\\sqrt{\\sum_{l=1}^pc_{li}^2}}{\\sum_{i=1}^t\\sqrt{\\sum_{l=1}^pc_{li}^2}}n\\,. \\tag{2.12} \\end{equation}\\] Let’s return to Example 2.1 and calculate the optimal allocations under two different sets of contrasts. First, we define an R function for calculating (2.12). opt_ni &lt;- function(C, n) { CtC &lt;- t(C) %*% C n * sqrt(diag(CtC)) / sum(sqrt(diag(CtC))) } Checking that the function opt-ni matches (2.12) is left as an exercise. Consider two sets of contrasts: All pairwise comparisons between the four treatments \\[\\begin{align*} c_1 &amp; = (-1, 1, 0, 0) \\\\ c_2 &amp; = (-1, 0, 1, 0) \\\\ c_3 &amp; = (-1, 0, 0, 1) \\\\ c_4 &amp; = (0, -1, 1, 0) \\\\ c_5 &amp; = (0, -1, 0, 1) \\\\ c_6 &amp; = (0, 0, -1, 1)\\,. \\end{align*}\\] Calculating (2.12), we obtain C &lt;- matrix( c( -1, 1, 0, 0, -1, 0, 1, 0, -1, 0, 0, 1, 0, -1, 1, 0, 0, -1, 0, 1, 0, 0, -1, 1), nrow = 6, byrow = T ) opt_ni(C, 20) ## [1] 5 5 5 5 Hence confirming that equal replication of the treatments is optimal for minimising the average variance of estimators of the pairwise treatment differences. If operator 4 is new to the mill, it may be desired to test their output to the average output from the other three operators, using a contrast with coefficients \\(c = (1/3, 1/3, 1/3, -1)\\). The allocation to minimise the variance of the corresponding estimator is given by: C &lt;- matrix( c(1/3, 1/3, 1/3, -1), nrow = 1 ) opt_ni(C, 20) ## [1] 3.333 3.333 3.333 10.000 So the optimal allocation splits 10 units between operators 1-3, and allocates 10 units to operator 4. There is no exact integer rounding possible, so we will use \\(n_1 = 4\\), \\(n_2=n_3 = 3\\), \\(n_4 = 10\\) and calculate the efficiency by comparing the variance of this allocation to that from the equally allocated design. crd_var &lt;- function(C, n) { CtC &lt;- t(C) %*% C sum(diag(CtC) / n) } n_equal &lt;- rep(5, 4) n_opt &lt;- c(4, 3, 3, 10) crd_var(C, n_opt) / crd_var(C, n_equal) ## [1] 0.7569 So the efficiency of the equally allocated design for estimating this contrast is 75.69 %. 2.8.2 Overall size of the experiment We can also consider the complementary question: suppose the proportion of runs that is to be allocated to each treatment has been fixed in advance, what size of experiment should be performed to meet the objectives? That is, given a fixed proportion, \\(w_i\\), of resource to be allocated to the \\(i\\)th treatment, so that \\(n_i = nw_i\\) units will be allocated to that treatment, what value of \\(n\\) should be chosen? One way of thinking about this question is to consider the ratio \\[\\begin{align*} \\frac{|\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}|}{\\sqrt{\\mbox{Var}(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}})}} &amp; = \\frac{|\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}|}{\\sqrt{\\frac{\\sigma^2}{n} \\sum_{i=1}^tc_i^2/w_i}} \\\\ &amp; = \\sqrt{n}\\frac{|\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}| / \\sigma}{\\sqrt{\\sum_{i=1}^tc_i^2/w_i}}\\,, \\end{align*}\\] which is analogous to the test statistic for \\(H_0: \\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau} = 0\\). For a given value of the signal-to-noise ratio \\(d = |\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}| / \\sigma\\), we can choose \\(n\\) to result in a specified value of \\(T = |\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}| / \\sqrt{\\mbox{Var}(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}})}\\): \\[ n = T^2\\frac{\\sum_{i=1}^t c_i^2/w_i}{d^2}\\,. \\] Returning to Example 2.1, assume are testing a single pairwise comparison and that we require \\(T = 3\\), so that the null hypothesis would be comfortably rejected at the 5% level (cf 1.96 for a standard z-test). For equal allocation of the units to each treatment (\\(w_1 = \\cdots = w_4 = 1/4\\)) and a variety of different values of the signal-to-noise ratio \\(d\\), we obtained the following optimal experiment sizes: opt_n &lt;- function(cv, prop, snr, target) target ^ 2 * c(t(cv) %*% diag( 1 / prop) %*% cv) / snr ^ 2 cv &lt;- c(-1, 1, 0, 0) w &lt;- rep(1/4, 4) snr &lt;- c(0.5, 1, 1.5, 2, 2.5, 3) cbind(&#39;Signal-to-noise&#39; = snr, &#39;n&#39; = opt_n(cv, w, snr, 3)) ## Signal-to-noise n ## [1,] 0.5 288.00 ## [2,] 1.0 72.00 ## [3,] 1.5 32.00 ## [4,] 2.0 18.00 ## [5,] 2.5 11.52 ## [6,] 3.0 8.00 So, for example, to achieve \\(T = 3\\) with a signal-to-noise ratio of \\(d=0.5\\) requires \\(n=288\\) runs. As would be expected, the number of runs required to achieve this value of \\(T\\) decreases as the signal-to-noise ration increases. For \\(d=3\\), only a very small experiment with \\(n=8\\) runs is needed. 2.9 Exercises For Example 2.1, calculate the mean response for each operator and show that the treatment differences and results from hypothesis tests using the results in Section 2.5 are the same as those found in Section 2.6 using pairwise.t.test, and emmeans. Also check the results in Section 2.7 by (i) adjusting individual p-values (for Bonferroni) and (ii) using the qtukey command. Solution As a reminder, the data from the experiment is as follows. Operator 1 Operator 2 Operator 3 Operator 4 59.8 59.8 60.7 61.0 60.0 60.2 60.7 60.8 60.8 60.4 60.5 60.6 60.8 59.9 60.9 60.5 59.8 60.0 60.3 60.5 The mean response, and variance, from each treatment is given by operator n_i mean variance 1 5 60.24 0.268 2 5 60.06 0.058 3 5 60.62 0.052 4 5 60.68 0.047 The sample variance, \\(s^2 = 0.106\\), from (2.9). As \\(\\sum_{i=1}^tc_i^2/n_i = \\frac{2}{5}\\) for contrast vectors \\(\\boldsymbol{c}\\) corresponding to pairwise differences, the standard error of each pairwise difference is given by \\(\\sqrt{\\frac{2s^2}{5}} = 0.206\\). Hence, we can create a table of pairwise differences, standard errors and test statistics. contrast estimate SE df t.ratio unadjust.p.value Bonferroni Tukey 1 - 2 0.18 0.206 16 0.873 0.396 1.000 0.819 1 - 3 -0.38 0.206 16 -1.843 0.084 0.503 0.290 1 - 4 -0.44 0.206 16 -2.134 0.049 0.292 0.184 2 - 3 -0.56 0.206 16 -2.716 0.015 0.092 0.066 2 - 4 -0.62 0.206 16 -3.007 0.008 0.050 0.038 3 - 4 -0.06 0.206 16 -0.291 0.775 1.000 0.991 Unadjusted p-values are obtained from the t-distribution, as twice the tail probabilities (2 * (1 - pt(abs(t.ratio), 16))). For Bonferroni, we simply multiply these p-values by \\({t \\choose 2} = 6\\), and then take the minimum of this value and 1. For the Tukey method, we use 1 - ptukey(abs(t.ratio) * sqrt(2), 4, 16) (see ?ptukey). Alternatively, to test each hypothesis at the 5% level, we can compare each t.ratio to (i) qt(0.975, 16) = 2.12 (unadjusted); (ii) qt(1 - 0.025/6, 16) = 3.008 (Bonferroni); or (iii) qtukey(0.95, 4, 16) / sqrt(2) = 2.861.  (Adapted from Wu and Hamada, 2009) The bioactivity of four different drugs \\(A\\), \\(B\\), \\(C\\) and \\(D\\) for treating a particular illness was compared in a study and the following ANOVA table was given for the data: Source Degrees of freedom Sums of squares Mean square Treatment 3 64.42 21.47 Residual 26 62.12 2.39 Total 29 126.54 What considerations should be made when assigning drugs to patients, and why? Use an \\(F\\)-test to test at the 0.01 level the null hypothesis that the four drugs have the same bioactivity. The average response from each treatment is as follows: \\(\\bar{y}_{A.}=66.10\\) (\\(n_A=7\\) patients), \\(\\bar{y}_{B.}=65.75\\) (\\(n_B=8\\)), \\(\\bar{y}_{C.} = 62.63\\) (\\(n_C=9\\)), and \\(\\bar{y}_{D.}=63.85\\) (\\(n_D=6\\)). Conduct hypothesis tests for all pairwise comparisons using the Bonferroni and Tukey methods for an experiment-wise error rate of 0.05. In fact, \\(A\\) and \\(B\\) are brand-name drugs and \\(C\\) and \\(D\\) are generic drugs. Test the null hypothesis at the 5% level that brand-name and generic drugs have the same bioactivity. Solution Each patient should be randomly allocated to one of the drugs. This is to protect against possible bias from lurking variables, e.g. demographic variables or subjective bias from the study administrator (blinding the study can also help to protect against this). Test statistic = (Treatment mean square)/(Residual mean square) = 21.47/2.39 = 8.98. Under \\(H_0\\): no difference in bioactivity between the drugs, the test statistic follows an \\(F_{3,26}\\) distribution, which has a 1% critical value of qf(0.99, 3, 26) = 4.6366. Hence, we can reject \\(H_0\\). For each difference, the test statistic has the form \\[ \\frac{|\\bar{y}_{i.}-\\bar{y}_{j.}|}{s\\sqrt{\\frac{1}{n_i}+\\frac{1}{n_j}}}\\,, \\] for \\(i, j = A, B, C, D;\\, i\\ne j\\). The treatment means and repetitions are given in the question (note that not all \\(n_i\\) are equal). From the ANOVA table, we get \\(s^2 = 62.12/26 = 2.389\\). The following table summarises the differences between drugs: \\(A-B\\) \\(A-C\\) \\(A-D\\) \\(B-C\\) \\(B-D\\) \\(C-D\\) Abs. difference 0.35 3.47 2.25 3.12 1.9 1.22 Test statistic 0.44 4.45 2.62 4.15 2.28 1.50 The Bonferroni critical value is \\(t_{26, 1-0.05/12} = 3.5069\\). The Tukey critical value is \\(q_{4,26, 0.95}/\\sqrt{2} = 2.7433\\) (available R as qtukey(0.95, 4, 26) / sqrt(2)). Hence under both methods, bioactivity of drugs \\(A\\) and \\(C\\), and \\(B\\) and \\(C\\), are significantly different. A suitable contrast has \\(\\boldsymbol{c} = (0.5, 0.5, -0.5, -0.5)\\), with \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau} = (\\tau_A + \\tau_B) / 2 - (\\tau_C + \\tau_D) / 2\\) (the difference in average treatment effects). An estimate for this contrast is given by \\((\\bar{y}_{A.} + \\bar{y}_{B.}) / 2 - (\\bar{y}_{C.} + \\bar{y}_{D.}) / 2\\), with variance \\[\\mbox{Var}\\left(\\frac{1}{2}(\\bar{y}_{A.}+\\bar{y}_{B.}) - \\frac{1}{2}(\\bar{y}_{C.}+\\bar{Y}_{D.})\\right) = \\frac{\\sigma^2}{4}\\left(\\frac{1}{n_A} + \\frac{1}{n_B} + \\frac{1}{n_C} + \\frac{1}{n_D}\\right)\\,.\\] Hence, a test statistic for \\(H_0:\\, \\frac{1}{2}(\\tau_A+\\tau_B) - \\frac{1}{2}(\\tau_C+\\tau_D)=0\\) is given by \\[ \\frac{\\frac{1}{2}(\\bar{y}_{A.}+\\bar{y}_{B.}) - \\frac{1}{2}(\\bar{y}_{C.}+\\bar{y}_{D.})}{\\sqrt{\\frac{s^2}{4}\\left(\\frac{1}{n_A} + \\frac{1}{n_B} + \\frac{1}{n_C} + \\frac{1}{n_D}\\right)}} = \\frac{2.685}{\\frac{\\sqrt{2.389}}{2}\\sqrt{\\frac{1}{7} + \\frac{1}{8} + \\frac{1}{9} + \\frac{1}{6}}} = 4.70\\,. \\] The critical value is \\(t_{26, 1-0.05/2} = 2.0555\\). Hence, we can reject \\(H_0\\) and conclude there is a difference between brand-name and generic drugs. The below table gives data from a completely randomised design to compare six different batches of hydrochloric acid on the yield of a dye (naphthalene black 12B). napblack &lt;- data.frame(batch = rep(factor(1:6), rep(5, 6)), repetition = rep(1:5, 6), yield = c(145, 40, 40, 120, 180, 140, 155, 90, 160, 95, 195, 150, 205, 110, 160, 45, 40, 195, 65, 145, 195, 230, 115, 235, 225, 120, 55, 50, 80, 45) ) knitr::kable( tidyr::pivot_wider(napblack, names_from = batch, values_from = yield)[, -1], col.names = paste(&quot;Batch&quot;, 1:6), caption = &quot;Naphthalene black experiment: yields (grams of standard colour) from six different batches of hydrochloric acid.&quot; ) Table 2.3: Naphthalene black experiment: yields (grams of standard colour) from six different batches of hydrochloric acid. Batch 1 Batch 2 Batch 3 Batch 4 Batch 5 Batch 6 145 140 195 45 195 120 40 155 150 40 230 55 40 90 205 195 115 50 120 160 110 65 235 80 180 95 160 145 225 45 Conduct a full analysis of this experiment, including exploratory data analysis; fitting a linear model, and conducting an F-test to compare to a model that explains variation using the six batches to the null model; usual linear model diagnostics; multiple comparisons of all pairwise differences between treatments. Solution Two of the simplest ways of examining the data are to calculate basic descriptive statistics, e.g. the mean and standard deviation of the yield in each batch, and to plot the data in the different batches using a simple graphical display, e.g. a stripchart of the yields in each batch. Notice that in both and we use the formula . This formula splits the data into groups defined by batch. aggregate(yield ~ batch, data = napblack, FUN = function(x) c(mean = mean(x), st.dev = sd(x))) ## batch yield.mean yield.st.dev ## 1 1 105.00 63.05 ## 2 2 128.00 33.28 ## 3 3 164.00 37.98 ## 4 4 98.00 68.70 ## 5 5 200.00 50.00 ## 6 6 70.00 31.02 boxplot(yield ~ batch, data = napblack) Figure 2.2: Naphthalene black experiment: distributions of dye yields from the six batches. Notice that even within any particular batch, the number of grams of standard dyestuff colour determined by the dye trial varies from observation to observation. This within-group variation is considered to be random or residual variation. This cannot be explained by any differences between batches. However, a second source of variation in the overall data set can be explained by variation between the batches, i.e. between the different batch means themselves. We can see from the box plots (Figure 2.2) and the mean yields in each batch that observations from batch number five appear to have given higher yields (in grams of standard colour) than those from the other batches. When we fit linear models and compare them using analysis of variance (ANOVA), it enables us to decide whether the differences that seem to be evident in these simple plots and descriptive statistics are statistically significant or whether this kind of variation could have arisen by chance, even though there are no real differences between the batches. An ANOVA table may be used to compare a linear model including differences between the batches to the null model. The linear model we will fit is a simple unit-treatment model: \\[\\begin{equation} Y_{ij} = \\mu + \\tau_i + \\varepsilon_{ij} \\,,\\qquad i=1,\\ldots,6;~j=1,\\ldots,5\\,, \\tag{2.13} \\end{equation}\\] where \\(Y_{ij}\\) is the response obtained from the \\(j\\)th repetition of the \\(i\\)th batch, \\(\\mu\\) is a constant term, \\(\\tau_i\\) is the expected effect due to the observation being in the \\(k\\)th batch \\((k=1,\\ldots,5)\\) and \\(\\varepsilon_{ij}\\) are the random errors. A test of the hypothesis that the group means are all equal is equivalent to a test that the \\(\\tau_i\\) are all equal to 0 \\((H_0:\\, \\tau_1 = \\tau_2 = \\cdots = \\tau_6 = 0)\\). We can use lm to fit model (2.13), and anova to test the hypothesis. Before we fit the linear model, we need to make sure batch has type factor16. napblack$batch &lt;- as.factor(napblack$batch) napblack.lm &lt;- lm(yield ~ batch, data = napblack) anova(napblack.lm) ## Analysis of Variance Table ## ## Response: yield ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## batch 5 56358 11272 4.6 0.0044 ** ## Residuals 24 58830 2451 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The p-value of 0.0044 indicates significant differences between at least two of the batch means. Therefore \\(H_0\\) is rejected and a suitable multiple comparison test should be carried out. To perform our analysis, we have fitted a linear model. Therefore, we should use some plots of the residuals \\(y_{ij} - \\hat{y}_{ij}\\) to check the model assumptions, particularly that the errors are independently and identically normally distributed. The function rstandard which produces residuals which have been standardised to have variance equal to 1. standres &lt;- rstandard(napblack.lm) fitted &lt;- fitted(napblack.lm) par(mfrow = c(1, 2), pty = &quot;s&quot;) with(napblack, { plot(batch, standres, xlab = &quot;Batch&quot;, ylab = &quot;Standarised residuals&quot;) plot(fitted, standres, xlab = &quot;Fitted value&quot;, ylab = &quot;Standarised residuals&quot;) }) Figure 2.3: Residuals against batch (left) and fitted values (right) for the linear model fit to the naphthalene black data. The plots (Figure 2.3) show no large standardised residuals (\\(&gt;2\\) in absolute value17). While there is some evidence of unequal variation across batches, there is no obvious pattern with respect to fitted values (e.g. no “funnelling”). We can also plot the standardised residuals against the quantiles of a standard normal distribution to assess the assumption of normality. par(pty = &quot;s&quot;) qqnorm(standres, main = &quot;&quot;) Figure 2.4: Normal probability plot for the standardised residuals for the linear model fit to the naphthalene black data. The points lie quite well on a straight line (see Figure 2.4), suggesting the assumption of normality is valid. Overall, the residual plots look reasonable; some investigation of transformations to correct for non-constant variance could be investigated (see MATH2010/STAT6123). When a significant difference between the treatments has been indicated, the next stage is to try to determine which treatments differ. In some cases a specific difference is of interest, a control versus a new treatment for instance, in which case that difference could now be inspected. However, usually no specific differences are to be considered a priori, and difference is of practical importance. A multiple comparison procedure is required to investigate all possible differences, which takes account of the number of possible differences available amongst the treatments (15 differences between the six batches here). We will use Tukey’s method for controlling the experiment-wise type I error rate, fixed here at 5%, as implemented by emmeans. napblack.emm &lt;- emmeans::emmeans(napblack.lm, &#39;batch&#39;) pairs(napblack.emm) ## contrast estimate SE df t.ratio p.value ## 1 - 2 -23 31.3 24 -0.735 0.9755 ## 1 - 3 -59 31.3 24 -1.884 0.4351 ## 1 - 4 7 31.3 24 0.224 0.9999 ## 1 - 5 -95 31.3 24 -3.034 0.0566 ## 1 - 6 35 31.3 24 1.118 0.8692 ## 2 - 3 -36 31.3 24 -1.150 0.8555 ## 2 - 4 30 31.3 24 0.958 0.9266 ## 2 - 5 -72 31.3 24 -2.299 0.2329 ## 2 - 6 58 31.3 24 1.852 0.4535 ## 3 - 4 66 31.3 24 2.108 0.3167 ## 3 - 5 -36 31.3 24 -1.150 0.8555 ## 3 - 6 94 31.3 24 3.002 0.0606 ## 4 - 5 -102 31.3 24 -3.257 0.0348 ## 4 - 6 28 31.3 24 0.894 0.9442 ## 5 - 6 130 31.3 24 4.152 0.0043 ## ## P value adjustment: tukey method for comparing a family of 6 estimates We have two significant differences, between batches 4-5 and 5-6. subset(transform(pairs(napblack.emm)), p.value &lt; 0.05) ## contrast estimate SE df t.ratio p.value ## 13 4 - 5 -102 31.31 24 -3.257 0.034820 ## 15 5 - 6 130 31.31 24 4.152 0.004295 (Adapted from Morris, 2011) Consider a completely randomised design with \\(t = 5\\) treatments and \\(n=50\\) units. The contrasts \\[ \\tau_2 - \\tau_1, \\quad \\tau_3 - \\tau_2, \\quad \\tau_4 - \\tau_3, \\tau_5 - \\tau_4 \\] are of primary interest to the experimenter. Find an allocation of the 50 units to the 5 treatments, i.e. find \\(n_1, \\ldots, n_5\\), that minimises the average variance of the corresponding contrast estimators. Fixing the proportions of experimental effort applied to each treatment to those found in part (a), i.e. to \\(w_i = n_i/50\\), find the value of \\(n\\) required to make the ratio \\(T = |\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}|/\\sqrt{\\mbox{var}\\left(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}}\\right)} = 2\\) assuming a signal-to-noise ratio of 1. Solution We can use the function opt_ni given in Section 2.8.1: n &lt;- 50 C &lt;- matrix( c( -1, 1, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, -1, 1, 0, 0, 0, 0, -1, 1 ), nrow = 4, byrow = T ) opt_ni(C, n) ## [1] 8.009 11.327 11.327 11.327 8.009 Rounding, we obtain a solution of the form \\(n_1 = n_5 =8\\), \\(n_2 = n_4 = 11\\) and \\(n_3 = 12\\). Any of \\(n_2, n_3, n_4\\) may be rounded up to 12 to form a design with the same variance. nv &lt;- c(8, 11, 11, 11, 8) crd_var(C, nv + c(0, 1, 0, 0, 0)) crd_var(C, nv + c(0, 0, 1, 0, 0)) crd_var(C, nv + c(0, 0, 0, 1, 0)) ## [1] 0.7803 ## [1] 0.7803 ## [1] 0.7803 The optimal ratios for each treatment from part (a) are \\(w_1 = w_5 = 0.1602\\) and \\(w_2 = w_3 = w_4 = 0.2265\\). Fixing these, we can use code from Section 2.8.2 to find the required value of \\(n\\) for each contrast. nv &lt;- NULL for(i in 1:4) nv[i] &lt;- opt_n(C[i, ], opt_ni(C, n) / n, 1, 2) # snr = 1, target = 2 nv ## [1] 42.63 35.31 35.31 42.63 Hence, we need \\(n = 43\\) for to achieve \\(T = 2\\) for the first and last contrasts, and \\(n = 36\\) for the second and third. The differences are due to the different proportions \\(w_i\\) assumed for each treatment. To achieve \\(T=2\\) for all contrasts, we pick the larger number, \\(n = 43\\). References "],["blocking.html", "Chapter 3 Blocking 3.1 Unit-block-treatment model 3.2 Normal equations 3.3 Analysis of variance 3.4 Randomised complete block designs 3.5 Orthogonal blocking 3.6 Balanced incomplete block designs 3.7 Exercises", " Chapter 3 Blocking The completely randomised design (CRD) works well when there is sufficient homogeneous experimental units to perform the whole experiment under the same, or very similar, conditions and there are no restrictions on the randomisation of treatments to units. The only systematic (non-random) differences in the observed responses result from differences between the treatments. While such designs are commonly and successfully used, especially in smaller experiments, their application can often be unrealistic or impractical in many settings. A common way in which the CRD fails is a lack of sufficiently similar experimental units. If there are systemtic differences between different batches, or blocks of units, these differences should be taken into account in both the allocation of treatments to units and the modelling of the resultant data. Otherwise, block-to-block differences may bias treatment comparisons and/or inflate our estimate of the background variability and hence reduce our ability to detect important treatment effects. Example 3.1 Steel bar experiment (Morris, 2011, ch. 4) Kocaoz et al. (2005) described an experiment to assess the strength of steel reinforcement bars from \\(t=4\\) coatings18 (treatments). In total \\(n=32\\) different bars (units) were available, but the testing process meant sets of four bars were tested together. To account for potential test-specific features (e.g. environmental or operational), these different test sets were assumed to form \\(b=8\\) blocks of size \\(k=4\\). The data are shown in Table 3.1 below. bar &lt;- data.frame(coating = rep(factor(1:4), 8), block = rep(factor(1:8), rep(4, 8)), strength = c(136, 147, 138, 149, 136, 143, 122, 153, 150, 142, 131, 136, 155, 148, 130, 129, 145, 149, 136, 139, 150, 149, 147, 144, 147, 150, 125, 140, 148, 149, 118, 145) ) knitr::kable( tidyr::pivot_wider(bar, names_from = coating, values_from = strength), col.names = c(&quot;Block&quot;, paste(&quot;Coating&quot;, 1:4)), caption = &quot;Steel bar experiment: tensile strength values (kliograms per square inch, ksi) from steel bars with four different coatings.&quot; ) Table 3.1: Steel bar experiment: tensile strength values (kliograms per square inch, ksi) from steel bars with four different coatings. Block Coating 1 Coating 2 Coating 3 Coating 4 1 136 147 138 149 2 136 143 122 153 3 150 142 131 136 4 155 148 130 129 5 145 149 136 139 6 150 149 147 144 7 147 150 125 140 8 148 149 118 145 Here, each block has size 4, which is equal to the number of treatments in the experiment, and each treatment is applied in each block. This is an example of a randomised complete block design. We can study the data graphically, plotting by treatment and by block. boxplot(strength ~ block, data = bar) boxplot(strength ~ coating, data = bar) Figure 3.1: Steel bar experiment: distributions of tensile strength (ksi) from the eight blocks (top) and the four coatings (bottom). The box plots within each plot in Figure 3.1 are comparable, as every treatment has occured with every block the same number of times (once). For example, when we compare the box plots for treatments 1 and 3, we know each of then display one observation from each block. Therefore, differences between treatments will not be influenced by large differences between blocks. This balance makes our analysis more straighforward. By eye, it appears here there may be differences between both coating 3 and the other three coatings. Example 3.2 Tyre experiment (Wu and Hamada, 2009, ch. 3) Davies (1954), p.200, examined the effect of \\(t=4\\) different rubber compounds (treatments) on the lifetime of a tyre. Each tyre is only large enough to split into \\(k=3\\) segments whilst still containing a representative amount of each compound. When tested, each tyre is subjected to the same road conditions, and hence is treated as a block. A design with \\(b=4\\) blocks was used, as displayed in Table 3.2. tyre &lt;- data.frame(compound = as.factor(c(1, 2, 3, 1, 2, 4, 1, 3, 4, 2, 3, 4)), block = rep(factor(1:4), rep(3, 4)), wear = c(238, 238, 279, 196, 213, 308, 254, 334, 367, 312, 421, 412) ) options(knitr.kable.NA = &#39;&#39;) knitr::kable( tidyr::pivot_wider(tyre, names_from = compound, values_from = wear), col.names = c(&quot;Block&quot;, paste(&quot;Compound&quot;, 1:4)), caption = &quot;Tyre experiment: relative wear measurements (unitless) from tires made with four different rubber compounds.&quot; ) Table 3.2: Tyre experiment: relative wear measurements (unitless) from tires made with four different rubber compounds. Block Compound 1 Compound 2 Compound 3 Compound 4 1 238 238 279 2 196 213 308 3 254 334 367 4 312 421 412 Here, each block has size \\(k=3\\), which is smaller than the number of treatments (\\(t=4\\)). Hence, each block cannot contain an application of each treatment. This is an example of an incomplete block design. Graphical exploration of the data is a little more problematic in this example. As each treatment does not occur in each block, box plots such as Figure 3.2 are not as informative. Do compounds three and four have higher average wear because they were the only compounds to both occur in blocks 3 and 4? Or do blocks 3 and 4 have a higher mean because they contain both compounds 3 and 4? The design cannot help us entirely disentangle the impact of blocks and treatments19. In our modelling, we will assume variation should first be described by blocks (which are generally fixed aspects of the experiment) and then treatments (which are more directly under the experimenter’s control). boxplot(wear ~ block, data = tyre) boxplot(wear ~ compound, data = tyre) Figure 3.2: Tyre experiment: distributions of wear from the four blocks (top) and the four compounds (bottom). 3.1 Unit-block-treatment model If \\(n_{ij}\\) is the number of times treatment \\(j\\) occurs in block \\(i\\), a common statistical model to describe data from a blocked experiment has the form \\[\\begin{equation} y_{ijl} = \\mu + \\beta_i + \\tau_j + \\varepsilon_{ijl}\\,, \\qquad i = 1,\\ldots, b; j = 1, \\ldots, t; l = 1,\\ldots,n_{ij}\\,, \\tag{3.1} \\end{equation}\\] where \\(y_{ijl}\\) is the response from the \\(l\\)th application of the \\(j\\)th treatment in the \\(i\\)th block, \\(\\mu\\) is a constant parameter, \\(\\beta_i\\) is the effect of the \\(i\\)th block, \\(\\tau_j\\) is the effect of treatment \\(j\\), and \\(\\varepsilon_{ijl}\\sim N(0, \\sigma^2)\\) are once again random individual effects from each experimental unit, assumed independent. The total number of runs in the experiment is given by \\(n = \\sum_{i=1}^b\\sum_{j=1}^t n_{ij}\\). For Example 3.1, there are \\(t=4\\) experiments, \\(b = 8\\) blocks and each treatment occurs once in each block, so \\(n_{ij} = 1\\) for all \\(i, j\\). In Example 3.2, there are again \\(t=4\\) treatments but now only \\(b=4\\) blocks and not every treatment occurs in every block. In fact, we have \\(n_{11} = n_{12} = n_{13} = 1\\), \\(n_{14} = 0\\), \\(n_{21} = n_{22} =n_{24} = 1\\), \\(n_{23} = 0\\), \\(n_{31} = n_{33} =n_{34} = 1\\), \\(n_{32} = 0\\), \\(n_{41} = 0\\) and \\(n_{42} = n_{43} =n_{44} = 1\\). Writing model (3.1) is matrix form as a partitioned linear model, we obtain \\[\\begin{equation} \\boldsymbol{y}= \\mu\\boldsymbol{1}_n + X_1\\boldsymbol{\\beta} + X_2\\boldsymbol{\\tau} + \\boldsymbol{\\varepsilon}\\,, \\tag{3.2} \\end{equation}\\] with \\(\\boldsymbol{y}\\) the \\(n\\)-vector of responses, \\(X_1\\) and \\(X_2\\) \\(n\\times b\\) and \\(n\\times t\\) model matrices for blocks and treatments, respectively, \\(\\boldsymbol{\\beta} = (\\beta_1,\\ldots, \\beta_b)^{\\mathrm{T}}\\), \\(\\boldsymbol{\\tau} = (\\tau_1,\\ldots, \\tau_t)^{\\mathrm{T}}\\) and \\(\\boldsymbol{\\varepsilon}\\) the \\(n\\)-vector of errors. In equation(3.2), assuming without loss of generality that runs of the experiment are ordered by block, the matrix \\(X_1\\) has the form \\[ X_1 = \\bigoplus_{i = 1}^b \\boldsymbol{1}_{k_i} = \\begin{bmatrix} \\boldsymbol{1}_{k_1} &amp; \\boldsymbol{0}_{k_1} &amp; \\cdots &amp; \\boldsymbol{0}_{k_1} \\\\ \\boldsymbol{0}_{k_2} &amp; \\boldsymbol{1}_{k_2} &amp; \\cdots &amp; \\boldsymbol{0}_{k_2} \\\\ \\vdots &amp; &amp; \\ddots &amp; \\vdots \\\\ \\boldsymbol{0}_{k_b} &amp; \\boldsymbol{0}_{k_b} &amp; \\cdots &amp; \\boldsymbol{1}_{k_b} \\\\ \\end{bmatrix}\\,, \\] where \\(k_i = \\sum_{j=1}^t n_{ij}\\), the number of units in the \\(i\\)th block. The structure of matrix \\(X_2\\) is harder to describe so distinctly, but each row includes a single non-zero entry, equal to one, indicating which treatment was applied in that run of the experiment. The first \\(k_1\\) rows correspond to block 1, the second \\(k_2\\) to block 2, and so on. We will see special cases later. 3.2 Normal equations Writing as a partitioned model \\(\\boldsymbol{y}= W\\boldsymbol{\\alpha} + \\boldsymbol{\\varepsilon}\\), with \\(W = [\\boldsymbol{1} | X_1 | X_2]\\) and \\(\\boldsymbol{\\alpha}^{\\mathrm{T}} = [\\mu | \\boldsymbol{\\beta}^{\\mathrm{T}} | \\boldsymbol{\\tau}^{\\mathrm{T}}]\\), the least squares normal equations \\[\\begin{equation} W^{\\mathrm{T}}W \\hat{\\boldsymbol{\\alpha}} = W^{\\mathrm{T}}\\boldsymbol{y} \\tag{3.3} \\end{equation}\\] can be written as a set of three matrix equations: \\[\\begin{align} n\\hat{\\mu} + \\boldsymbol{1}_n^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}} + \\boldsymbol{1}_n^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\tau}} &amp; = \\boldsymbol{1}_n^{\\mathrm{T}}\\boldsymbol{y}\\,, \\tag{3.4}\\\\ X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\hat{\\mu} + X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}} + X_1^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\tau}} &amp; = X_1^{\\mathrm{T}}\\boldsymbol{y}\\,, \\tag{3.5}\\\\ X_2^{\\mathrm{T}}\\boldsymbol{1}_n\\hat{\\mu} + X_2^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}} + X_2^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\tau}} &amp; = X_2^{\\mathrm{T}}\\boldsymbol{y}\\,. \\tag{3.6}\\\\ \\end{align}\\] Above, the matrices \\(X_1^{\\mathrm{T}}X_1 = \\mathrm{diag}(k_1,\\ldots,k_b)\\) and \\(X_2^{\\mathrm{T}}X_2 = \\mathrm{diag}(n_1,\\ldots,n_t)\\) have simple forms as diagonal matrices with entries equal to the size of each block and the number of replications of each treatment, respectively. The \\(t\\times b\\) matrix \\(N = X_2^{\\mathcal{T}}X_1\\) is particularly important in block designs, and is called the incidence matrix. Each of the \\(i\\)th row of \\(N\\) indicates in which blocks the \\(i\\)th treatment occurs. We can eliminate the explicit dependence on \\(\\mu\\) and \\(\\boldsymbol{\\beta}\\) to find reduced normal equations for \\(\\boldsymbol{\\tau}\\) by multiplying the middle equation by \\(X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}\\): \\[\\begin{multline} X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\hat{\\mu} + X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}} + X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\tau}} \\\\ = X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\hat{\\mu} + X_2^{\\mathrm{T}}X_1\\hat{\\boldsymbol{\\beta}} + X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}X_2\\hat{\\boldsymbol{\\tau}} \\\\ = X_2^{\\mathrm{T}}X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\boldsymbol{y}\\\\ \\end{multline}\\] and subtracting from the final equation: \\[\\begin{multline} X_2^{\\mathrm{T}}\\left(\\boldsymbol{1}_n - X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\right)\\hat{\\mu} + \\left(X_2^{\\mathrm{T}}X_1 - X_2^{\\mathrm{T}}X_1\\right)\\boldsymbol{\\beta} \\\\ + X_2^{\\mathrm{T}}\\left(I_n - X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\right)X_2\\boldsymbol{\\tau}\\\\ = X_2^{\\mathrm{T}}\\left(I_n - X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\right)\\boldsymbol{y}\\,. \\end{multline}\\] Clearly, a zero matrix is multiplying the block effects \\(\\boldsymbol{\\beta}\\). Also, \\[ X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\boldsymbol{1}_n = \\boldsymbol{1}_n\\,, \\] as \\[ X_1(X_1^{\\mathrm{T}}X_1)^{-1} = \\bigoplus_{i = 1}^b \\frac{1}{k_i}\\boldsymbol{1}_{k_i} = \\begin{bmatrix} \\frac{1}{k_1}\\boldsymbol{1}_{k_1} &amp; \\boldsymbol{0}_{k_1} &amp; \\cdots &amp; \\boldsymbol{0}_{k_1} \\\\ \\boldsymbol{0}_{k_2} &amp; \\frac{1}{k_2}\\boldsymbol{1}_{k_2} &amp; \\cdots &amp; \\boldsymbol{0}_{k_2} \\\\ \\vdots &amp; &amp; \\ddots &amp; \\vdots \\\\ \\boldsymbol{0}_{k_b} &amp; \\boldsymbol{0}_{k_b} &amp; \\cdots &amp; \\frac{1}{k_b}\\boldsymbol{1}_{k_b} \\\\ \\end{bmatrix}\\,, \\] and hence \\[ X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}} = \\bigoplus_{i = 1}^b \\frac{1}{k_i}J_{k_i} = \\begin{bmatrix} \\frac{1}{k_1}J_{k_1} &amp; \\boldsymbol{0}_{k_1\\times k_2} &amp; \\cdots &amp; \\boldsymbol{0}_{k_1\\times k_b} \\\\ \\boldsymbol{0}_{k_2\\times k_1} &amp; \\frac{1}{k_2}J_{k_2} &amp; \\cdots &amp; \\boldsymbol{0}_{k_2\\times k_b} \\\\ \\vdots &amp; &amp; \\ddots &amp; \\vdots \\\\ \\boldsymbol{0}_{k_b\\times k_1} &amp; \\boldsymbol{0}_{k_b\\times k_2} &amp; \\cdots &amp; \\frac{1}{k_b}J_{k_b} \\\\ \\end{bmatrix}\\,. \\] Writing \\(H_1 = X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}\\), we then get the reduced normal equations for \\(\\boldsymbol{\\tau}\\): \\[\\begin{equation} X_2^{\\mathrm{T}}\\left(I_n - H_1\\right)X_2\\boldsymbol{\\tau}= X_2^{\\mathrm{T}}\\left(I_n - H_1\\right)\\boldsymbol{y}\\,. \\tag{3.7} \\end{equation}\\] We can demonstrate the form of these matrices through our two examples. For Example 3.1: one &lt;- rep(1, 4) X1 &lt;- kronecker(diag(1, nrow = 8), one) X2 &lt;- diag(1, nrow = 4) X2 &lt;- do.call(&quot;rbind&quot;, replicate(8, X2, simplify = FALSE)) #incidence matrix N &lt;- t(X2) %*% X1 X1tX1 &lt;- t(X1) %*% X1 # diagonal X2tX2 &lt;- t(X2) %*% X2 # diagonal H1 &lt;- X1 %*% solve(t(X1) %*% X1) %*% t(X1) ones &lt;- H1 %*% rep(1, 32) # H1 times vector of 1s is also a vector of 1s A &lt;- t(X2) %*% X2 - t(X2) %*% H1 %*% X2 # X2t(I - H1)X2 qr(A)$rank # rank 3 X2tH1 &lt;- t(X2) %*% H1 # adjustment to y W &lt;- cbind(ones, X1, X2) # overall model matrix qr(W)$rank # rank 11 (t+b - 1) For Example 3.2: one &lt;- rep(1, 3) X1 &lt;- kronecker(diag(1, nrow = 4), one) X2 &lt;- matrix( c(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), nrow = 12, byrow = T ) #incidence matrix N &lt;- t(X2) %*% X1 X1tX1 &lt;- t(X1) %*% X1 # diagonal X2tX2 &lt;- t(X2) %*% X2 # diagonal H1 &lt;- X1 %*% solve(t(X1) %*% X1) %*% t(X1) ones &lt;- H1 %*% rep(1, 12) # H1 times vector of 1s is also a vector of 1s A &lt;- t(X2) %*% X2 - t(X2) %*% H1 %*% X2 # X2t(I - H1)X2 qr(A)$rank # rank 3 X2tH1 &lt;- t(X2) %*% H1 # adjustment to y W &lt;- cbind(ones, X1, X2) # overall model matrix qr(W)$rank # rank 7 (t+b - 1) Notice that if we write \\(X_{2|1} = (I_n - H_1)X_2\\), then the reduced normal equations become \\[ X_{2|1}^{\\mathrm{T}}X_{2|1}\\boldsymbol{\\tau} = X_{2|1}^{\\mathrm{T}}\\boldsymbol{y}\\,, \\] which have the same form as the CRD in Chapter 2 albeit with a different \\(X_{2|1}\\) matrix as we are adjusting for more complex nuisance parameters. In general, the solution of these equations will depend on the exact form of the design. For the randomised complete block design, the solution turns out to be straighforward (see Section @ref(#rcdb) below). By default, to fit model (3.2), the lm function in R applies the constraint \\(\\tau_t = \\beta_b = 0\\), and removes the corresponding columns from \\(X_1\\) and \\(X_2\\), to leave a \\(W\\) matrix with full column rank. Clearly, this solution is not unique but, as with CRDs, we will identify uniquely estimatable combinations of the model parameters (and use emmeans to extract these estimates from an lm object). 3.3 Analysis of variance As was the case with the CRD, it can be shown that any solution to the normal equations (3.3) will produce a unique solution to \\(\\widehat{W\\alpha}\\), and hence a unique analysis of variance decomposition can be obtained. For a block experiment, the ANOVA table is comparing the full model (3.2), the model containing the block effects \\[\\begin{equation} \\boldsymbol{y}= \\mu\\boldsymbol{1} + X_1\\boldsymbol{\\beta} + \\boldsymbol{\\varepsilon} \\tag{3.8} \\end{equation}\\] and the null model \\[\\begin{equation} \\boldsymbol{y}= \\mu\\boldsymbol{1} + \\boldsymbol{\\varepsilon}\\,, \\tag{3.9} \\end{equation}\\] and has the form: Source Degrees of freedom Sums of squares Mean square Blocks \\(b-1\\) RSS (3.9) - RSS (3.8) Treatments \\(t-1\\) RSS (3.8) - RSS (3.2) [RSS (3.8) - RSS (3.2)] / \\((t-1)\\) Residual \\(n - b - t + 1\\) RSS (3.2) RSS (3.2) / \\((n - b - t + 1)\\) Total \\(n - 1\\) RSS (3.9) We test the hypothesis \\(H_0: \\tau_1 = \\cdots = \\tau_t = 0\\) at the \\(100\\alpha\\)% significance level by comparing the ratio of treatment and residual mean squares to the \\(1-\\alpha\\) quantile of an \\(F\\) distribution with \\(t-1\\) and \\(n-b-t+1\\) degrees of freedom. For Example 3.1, we obtain the following ANOVA. bar.lm &lt;- lm(strength ~ block + coating, data = bar) anova(bar.lm) ## Analysis of Variance Table ## ## Response: strength ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## block 7 215 31 0.55 0.7903 ## coating 3 1310 437 7.75 0.0011 ** ## Residuals 21 1184 56 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Clearly, the null hypothesis of no treatment effect is rejected. The anova function also compares the block mean square to the residual mean square to perform a test of the hypothesis \\(H_0: \\beta_1 = \\cdots = \\beta_b = 0\\). This is not a hypothesis that should usually be tested. The blocks are a nuisance factor and are generally a feature of the experimental process that has not been subject to randomisation; we are not interested in testing for block-to-block differences.20 For Example 3.2, we get the ANOVA table: tyre.lm &lt;- lm(wear ~ block + compound, data = tyre) anova(tyre.lm) ## Analysis of Variance Table ## ## Response: wear ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## block 3 39123 13041 37.2 0.00076 *** ## compound 3 20729 6910 19.7 0.00335 ** ## Residuals 5 1751 350 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Again, the null hypothesis is rejected, and hence we should investigate which tyre compounds differ in their mean response. The residual mean square for model (3.2) also provides an unbiased estimate, \\(s^2\\), of \\(\\sigma^2\\), the variability of the \\(\\varepsilon_{ijl}\\), assuming the unit-block-treatment model is correct. For Example 3.1, \\(s^2 = 56.3869\\) and for Example 3.2, \\(s^2 = 350.1833\\). 3.4 Randomised complete block designs A randomised complete block design (RCBD) has each treatment replicated exactly once in each block, that is \\(n_{ij} = 1\\) for \\(i=1,\\ldots, b; j = 1, \\ldots, t\\). Therefore each block has common size \\(k_1=\\cdots =k_b = t\\). The \\(t\\) treatments are randomised to the \\(t\\) units in each block. We can drop the index \\(l\\) from our unit-block-treatment model, as every treatment is replicated just once: \\[\\begin{equation*} y_{ij} = \\mu + \\beta_i + \\tau_j + \\varepsilon_{ij}\\,, \\qquad i = 1,\\ldots, b; j = 1, \\ldots, t\\,. \\end{equation*}\\] For an RCBD, the matrix \\(X_{2|1}\\) has the form \\[\\begin{align} X_{2|1} &amp; = (I_n - H_1)X_2 \\nonumber \\\\ &amp; = X_2 - H_1X_2 \\nonumber \\\\ &amp; = X_2 - \\frac{1}{t}J_{n \\times t} \\tag{3.10}\\,, \\end{align}\\] following from the fact that \\[\\begin{align} H_1X_2 &amp; = X_1(X_1^{\\mathrm{T}}X_1)^{-1}X_1^{\\mathrm{T}}X_2 \\\\ &amp; = \\frac{1}{t}X_1X_1^{\\mathrm{T}}X_2 \\\\ &amp; = \\frac{1}{t}X_1N^{\\mathrm{T}} \\\\ &amp; = \\frac{1}{t}X_1J_{b\\times t} \\\\ &amp; = \\frac{1}{t}J_{n\\times t}\\,, \\end{align}\\] as for a RCBD \\(X_1^{\\mathrm{T}}X_1 = \\mathrm{diag}(k_1,\\ldots, k_b) = tI_b\\) and \\(X_2^{\\mathrm{T}}X_1 = N = J_{t\\times b}\\). Comparing (3.10) to the form of \\(X_{2|1}\\) for a CRD, equation (2.6), we see that for the RCBD, \\(X_{2|1}\\) has the same form as a CRD with \\(b\\) replicates of each treatment (that is, \\(n_i = b\\) for \\(i=1,\\ldots, t\\)). This is a powerful result, as it tell us The reduced normal equations for the RCBD take the same form as for the CRD, \\[ \\hat{\\tau}_j - \\hat{\\tau}_w = \\bar{y}_{.j} - \\bar{y}_{..}\\,, \\] with \\(\\hat{\\tau}_w = \\frac{1}{t}\\sum_{j=1}^t\\hat{\\tau}_j\\), \\(\\bar{y}_{.j} = \\frac{1}{b}\\sum_{i=1}^b y_{ij}\\) and \\(\\bar{y}_{..} = \\frac{1}{n}\\sum_{i=1}^b\\sum_{j=1}^t y_{ij}\\). Hence, as with a CRD, we can estimate any contrast \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\), having \\(\\sum_{j=1}^tc_j = 0\\), with estimator \\[ \\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}} = \\sum_{j=1}^tc_j\\bar{y}_{.j}\\,. \\] Hence, the point estimate for a contrast \\(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\) is exactly the same as would be obtained by ignoring blocks and treating the experiment as a CRD with \\(n = bt\\) and \\(n_i = b\\), for \\(i=1,\\ldots, t\\). Inference for a contrast takes exactly the same form as for a CRD (Section 2.5), with in particular: \\[ \\mathrm{var}\\left(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}}\\right) = \\frac{\\sigma^2}{b}\\sum_{j=1}^tc_j^2\\,, \\] and \\[ \\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}} \\sim N\\left(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}, \\frac{\\sigma^2}{b}\\sum_{j=1}^t c_j^2\\right)\\,. \\] Although these equations have the same form as for a CRD, note that \\(\\sigma^2\\) is representing different quantities in each case. In a CRD, \\(\\sigma^2\\) is the uncontrolled variation in the response among all experimental units. In a RCBD, \\(\\sigma^2\\) is the uncontrolled variation in the response among all units within a common block. Block-to-block differences are modelled via inclusion of the block effects \\(\\beta_i\\) in the model, and hence if blocking is effective, we would expect \\(\\sigma^2\\) from a RCBD to be substantially smaller than from a corresponding CRD with \\(n_i = b\\). Example 3.1 is a RCBD. We can estimate the contrasts \\[ \\tau_{1} - \\tau_{2} \\\\ \\tau_{1} - \\tau_{3} \\\\ \\tau_{1} - \\tau_{4} \\\\ \\] between coatings21 using emmeans. bar.emm &lt;- emmeans::emmeans(bar.lm, ~ coating) contrastv1.emmc &lt;- function(levs) data.frame(&#39;t1 v t2&#39; = c(1, -1, 0, 0), &#39;t1 v t3&#39; = c(1, 0, -1, 0), &#39;t1 v t4&#39; = c(1, 0, 0, -1)) emmeans::contrast(bar.emm, &#39;contrastv1&#39;) ## contrast estimate SE df t.ratio p.value ## t1.v.t2 -1.25 3.75 21 -0.333 0.7425 ## t1.v.t3 15.00 3.75 21 3.995 0.0007 ## t1.v.t4 4.00 3.75 21 1.065 0.2988 ## ## Results are averaged over the levels of: block It is important to once again adjust for mulitple comparisons. Here we can use a Bonferroni adjustment, and multiply each p-value by the number of tests (3). We obtain p-values of 1 (coating 1 versus 2), 0.002 (1 versus 3) and 0.8964 (2 versus 3). Hence, there is a significant difference between coatings 1 and 3, with \\(H_0: \\tau_1 = \\tau_3\\) rejected at the 1% significant level. We can demonstrate the equivalence of the contrast point estimates between a RCBD and a CRD by fitting a unit-treatment model that ignores blocks: bar_crd.lm &lt;- lm(strength ~ coating, data = bar) bar_crd.emm &lt;- emmeans::emmeans(bar_crd.lm, ~ coating) emmeans::contrast(bar_crd.emm, &#39;contrastv1&#39;) ## contrast estimate SE df t.ratio p.value ## t1.v.t2 -1.25 3.54 28 -0.354 0.7263 ## t1.v.t3 15.00 3.54 28 4.243 0.0002 ## t1.v.t4 4.00 3.54 28 1.132 0.2674 As expected the point estimates of the three contrasts are identical. In this case, the standard error of each contrast is actually smaller assuming a CRD without blocks, suggesting block-to-block differences were actually small here (further evidence is provided by the small block sums of squares in the ANOVA table). Here the estimate of \\(\\sigma\\) from the RCBD is \\(s_{RCBD} = 7.5091\\) and from the CRD is \\(s_{CRD} = 7.0698\\), so for this example the unit-to-unit variation within and between blocks is not so different, and actually estimated to be slightly smaller in the CRD22. 3.5 Orthogonal blocking The equality of the point estimates from the RCBD and the CRD is a consequence of the block and treatment parameters in model (3.1) being orthogonal. That is, the least squares estimators for \\(\\boldsymbol{\\beta}\\) and \\(\\boldsymbol{\\tau}\\) are independent in the sense that the estimators obtained from model (3.2) are the same as those obtained from the sub-models \\[ \\boldsymbol{y}= \\mu\\boldsymbol{1}_n + X_1\\boldsymbol{\\beta} + \\boldsymbol{\\varepsilon}\\,, \\] and \\[ \\boldsymbol{y}= \\mu\\boldsymbol{1}_n + X_2\\boldsymbol{\\tau} + \\boldsymbol{\\varepsilon}\\,. \\] That is, the presence or absence of the block parameters does not affect the estimator of the treatment parameters (and vice versa). A condition for \\(\\boldsymbol{\\beta}\\) and \\(\\boldsymbol{\\tau}\\) to be estimated orthogonally can be derived from normal equations (3.4) - (3.5). Firstly. we premultiply (3.4) by \\(\\frac{1}{n}X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\) and substract it from (3.5): \\[\\begin{align} &amp; \\left(X_1^{\\mathrm{T}}\\boldsymbol{1}_n - X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\right)\\hat{\\mu} + \\left(X_1^{\\mathrm{T}}X_1 - \\frac{1}{n}X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\boldsymbol{1}_n^{\\mathrm{T}}X_1\\right)\\hat{\\boldsymbol{\\beta}} + \\left(X_1^{\\mathrm{T}}X_2 - \\frac{1}{n}X_1^{\\mathrm{T}}\\boldsymbol{1}_n\\boldsymbol{1}_n^{\\mathrm{T}}X_2\\right)\\hat{\\boldsymbol{\\tau}} \\nonumber \\\\ &amp; = X_1^{\\mathrm{T}}\\left(I_n - \\frac{1}{n}J_n\\right)X_1\\hat{\\boldsymbol{\\beta}} + X_1^{\\mathrm{T}}\\left(I_n - \\frac{1}{n}J_n\\right)X_2\\hat{\\boldsymbol{\\tau}} \\nonumber \\\\ &amp; = X_1^{\\mathrm{T}}\\left(I_n - \\frac{1}{n}J_n\\right) \\tag{3.11}\\,. \\end{align}\\] Secondly, we premultiply (3.4) by \\(\\frac{1}{n}X_2^{\\mathrm{T}}\\boldsymbol{1}_n\\) and substract it from (3.6): \\[\\begin{equation} X_2^{\\mathrm{T}}\\left(I_n - \\frac{1}{n}J_n\\right)X_1\\hat{\\boldsymbol{\\beta}} + X_2^{\\mathrm{T}}\\left(I_n - \\frac{1}{n}J_n\\right)X_2\\hat{\\boldsymbol{\\tau}} = X_2^{\\mathrm{T}}\\left(I_n - \\frac{1}{n}J_n\\right)\\,. \\tag{3.12} \\end{equation}\\] For equations (3.11) and (3.12) to be independent, we require \\[ X_2^{\\mathrm{T}}\\left(I_n - \\frac{1}{n}J_n\\right)X_1 = \\boldsymbol{0}_{t\\times b}\\,. \\] Hence, we obtain the following condition on the incidence matrix \\(N = X_2^{\\mathrm{T}}X_1\\) for a block design to be orthogonal: \\[\\begin{align} N &amp; = \\frac{1}{n}X_2^{\\mathrm{T}}J_nX_1 \\\\ &amp; = \\frac{1}{n}\\boldsymbol{n}\\boldsymbol{k}^{\\mathrm{T}}\\,, \\end{align}\\] where \\(\\boldsymbol{n}^{\\mathrm{T}} = (n_1,\\ldots, n_t)\\) is the vector of treatment replications and \\(\\boldsymbol{k}^{\\mathrm{T}} = (k_1,\\ldots, k_b)\\) is the vector of block sizes. The most common orthogonal block design for unstructured treatments is the RCBD, which has \\(n = bt\\), \\(\\boldsymbol{n} = b\\boldsymbol{1}_t\\), \\(\\boldsymbol{k} = t\\boldsymbol{1}_b\\), and \\[\\begin{align} N &amp; = J_{t \\times b} &amp; = \\frac{1}{bt}\\boldsymbol{n}\\boldsymbol{k}^{\\mathrm{T}}\\,. \\end{align}\\] Hence, the condition for orthogonality is met. In an orthogonal design, such as a RCBD, all information about the treatment comparisons is contained in comparisons made within blocks. For more complex blocking structures, such as incomplete block designs, this is not the case. We shall see orthogonal blocking again in Chapter 5. 3.6 Balanced incomplete block designs When the blocks sizes are less than the number of treatments, i.e. \\(k_i &lt; t\\) for all \\(i=1,\\ldots, b\\), by necessity the design is incomplete, in that not all treatments can be allocated to every block. We will restrict ourselves now to considering binary designs with common block size \\(k&lt;t\\). In a binary design, each treatment occurs within a block either 0 or 1 times (\\(n_{ij}=0\\) or \\(n_{ij}=1\\)). Example 3.2 is an example of an incomplete design with \\(k=3&lt;t=4\\). For incomplete designs, it is often useful to study the treatment concurrence matrix, given by \\(NN^{\\mathrm{T}}\\). N &lt;- matrix( c(1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1), nrow = 4, byrow = T ) N %*% t(N) ## [,1] [,2] [,3] [,4] ## [1,] 3 2 2 2 ## [2,] 2 3 2 2 ## [3,] 2 2 3 2 ## [4,] 2 2 2 3 This matrix has the number of treatment replications, \\(n_j\\), on the diagonal and the off-diagonal elements are equal to the number of blocks within which each pair of treatments occurs together. We will denote as \\(\\lambda_{ij}\\) the number of blocks that contain both treatment \\(i\\) and treatment \\(j\\) (\\(i\\ne j\\)). For Example 3.2, \\(\\lambda_{ij} = 2\\) for all \\(i,j = 1,\\ldots, 4\\); that is, each pair of treatments occurs together in two blocks. Definition 3.1 A balanced incomplete block design (BIBD) is an incomplete block design with \\(k&lt;t\\) that meets three requirements: The design is binary. Each treatment is applied to a unit in the same number of blocks. It follows that the common number of units applied to each treatment must be \\(r = n_j = bk / t\\) (\\(j=1,\\ldots, t\\)), where \\(n = bk\\). (Sometimes referred to as first-order balance). Each pair of treatments is applied to two units in the same number of blocks, that is \\(\\lambda_{ij} = \\lambda\\). (Sometimes referred to as second-order balance). In fact, we can deduce that \\(\\lambda(t-1) = r(k - 1)\\). To see this, focus on treatment 1. This treatment occurs in \\(r\\) blocks, and in each of these blocks, it occurs together with \\(k-1\\) other treatments. But also, treatment 1 occurs \\(\\lambda\\) times with each of the other \\(t-1\\) treatments. Hence \\(\\lambda(t-1) = r(k - 1)\\), or \\(\\lambda = r(k - 1) / (t-1)\\). The design in Example 3.2 is a BIBD with \\(b=4\\), \\(k=3\\), \\(t = 4\\), \\(r = 4\\times 3 / 4 = 3\\), \\(\\lambda = 3 \\times (3-1) / (4-1) = 2\\). 3.6.1 Construction of BIBDs BIBDs do not exist for all combinations of values of \\(t\\), \\(k\\) and \\(b\\). In particular, we must ensure \\(r=bk/t\\) is integer, and \\(\\lambda = r(k - 1) / (t-1)\\) is integer. In general, we can always construct a BIBD for \\(t\\) treatments in \\(b = {t \\choose k}\\) blocks of size \\(k\\), although it may not be the smallest possible BIBD. Each of the possible choices of \\(k\\) treatments from the total \\(t\\) forms one block. Such a design will have \\(r = {t-1 \\choose k-1}\\) and \\(\\lambda = {t-2 \\choose k-2}\\). The design in Example 3.2 was constructed this way, with \\(b = 4\\), \\(r = 3\\) and \\(\\lambda = 2\\). Sometimes, smaller BIBDs that satisfy the two conditions above can be constructed. Finding these designs is an combinatorial problem, and tables of designs are available in the literature23. A large collection of BIBDs has also been catalogued in the R package ibd. The function bibd generates BIBDs for given values of \\(t\\), \\(b\\), \\(r\\), \\(k\\) and \\(\\lambda\\), or returns a message that a design is not available for those values. We can use the function to find the design used in Example 3.2. tyre.bibd &lt;- ibd::bibd(v = 4, b = 4, r = 3, k = 3, lambda = 2) # note, v is the notation for the number of treatments tyre.bibd$N # incidence matrix ## [,1] [,2] [,3] [,4] ## [1,] 0 1 1 1 ## [2,] 1 0 1 1 ## [3,] 1 1 0 1 ## [4,] 1 1 1 0 We can also use the package to find a design for bigger experiments, for example \\(t=8\\) treatments in \\(b=14\\) blocks of size \\(k=4\\). Here, \\(r = 14\\times 4 / 8 = 7\\) and \\(\\lambda = 7 \\times 3 / 7 = 3\\). larger.bibd &lt;- ibd::bibd(v = 8, b = 14, r = 7, k = 4, lambda = 3) larger.bibd$N ## [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] ## [1,] 0 0 0 0 1 1 0 1 1 0 0 1 1 1 ## [2,] 1 0 0 0 0 0 1 0 0 1 1 1 1 1 ## [3,] 0 0 0 1 0 1 1 1 1 1 1 0 0 0 ## [4,] 1 0 1 1 1 1 1 0 0 0 0 0 0 1 ## [5,] 0 1 1 1 0 1 0 0 0 0 1 1 1 0 ## [6,] 1 1 0 1 1 0 0 0 1 1 0 1 0 0 ## [7,] 1 1 1 0 0 0 0 1 1 0 1 0 0 1 ## [8,] 0 1 1 0 1 0 1 1 0 1 0 0 1 0 Although larger than the examples we have considered before, this design is small compared to the design that would be obtained from the naive construction above with \\(b = {t \\choose k} = {8 \\choose 4} = 70\\) blocks. 3.6.2 Reduced normal equations It can be shown that the reduced normal equations (3.7) for a BIBD can be written as \\[\\begin{equation} \\left(I_t - \\frac{1}{t}J_t\\right)\\hat{\\boldsymbol{\\tau}} = \\frac{k}{\\lambda t}\\left(X_2^{\\mathrm{T}} - \\frac{1}{k}NX_1^{\\mathrm{T}}\\right)\\boldsymbol{y}\\,. \\tag{3.13} \\end{equation}\\] Equation (3.13) defines a series of \\(t\\) equations of the form \\[\\begin{align*} \\hat{\\tau_j} - \\hat{\\tau}_w &amp; = \\frac{k}{\\lambda t}\\left(\\sum_{i = 1}^b n_{ij}y_{ij} - \\frac{1}{k}\\sum_{i=1}^bn_{ij}\\sum_{j=1}^tn_{ij}y_{ij}\\right) \\\\ &amp; = \\frac{k}{\\lambda t} q_j\\,, \\end{align*}\\] with \\(q_j = \\sum_{i = 1}^b n_{ij}y_{ij} - \\frac{1}{k}\\sum_{i=1}^bn_{ij}\\sum_{j=1}^tn_{ij}y_{ij}\\). Notice that unlike for the RCBD, the reduced normal equations for a BIBD do not correspond to the equations for a CRD. Although the first term in \\(q_i\\) is the sum of the responses for the \\(j\\)th treatment (mirroring the CRD), the second term is no longer the overall sum (or average) of the responses. In fact, for \\(q_j\\) this second term is an adjusted total, just involving observations from those blocks that contain treatment \\(j\\). 3.6.3 Estimation and inference As with the CRD and RCD we can estimate contrasts in the \\(\\tau_i\\), with estimator \\[ \\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}} = \\frac{k}{\\lambda t}\\sum_{j=1}^tc_jq_j\\,. \\] Due to the form of the reduced normal equations for the BIBD, the estimator is no longer just a linear combination of the treatment means; \\(q_j\\) includes a term that adjusts for the blocks in which treatment \\(j\\) has occurred. The simplest way to derive the variance of this estimator is to rewrite it in the form \\[ \\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}} = \\frac{k}{\\lambda t}\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{q}\\,, \\] with \\(\\boldsymbol{q} = \\left(X_2^{\\mathrm{T}} - \\frac{1}{k}NX_1^{\\mathrm{T}}\\right)\\boldsymbol{y}\\). Then \\[ \\mathrm{var}\\left(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}}\\right) = \\frac{k^2}{\\lambda^2t^2}\\boldsymbol{c}^{\\mathrm{T}}\\mathrm{var}(\\boldsymbol{q}) \\boldsymbol{c}\\,. \\] Recalling that \\(NN^{\\mathrm{T}}\\) is the treatment coincidence matrix, the variance-covariance matrix of \\(\\boldsymbol{q}\\) is given by \\[\\begin{align*} \\mathrm{var}(\\boldsymbol{q}) &amp; = \\left(X_2^{\\mathrm{T}} - \\frac{1}{k}NX_1^{\\mathrm{T}}\\right)\\left(X_2 - \\frac{1}{k}X_1N\\right)\\sigma^2 \\\\ &amp; = \\sigma^2\\left\\{rI_t - \\frac{1}{k}NN^{\\mathrm{T}}\\right\\} \\\\ &amp; = \\sigma^2\\left\\{rI_t - \\frac{1}{k}\\left[(r-\\lambda)I_t + \\lambda J_t\\right]\\right\\} \\\\ &amp; = \\sigma^2\\left\\{\\left(\\frac{r(k-1) + \\lambda}{k}\\right)I_t - \\frac{\\lambda}{k}J_t\\right\\} \\\\ &amp; = \\sigma^2\\left\\{\\left(\\frac{\\lambda(t-1) + \\lambda}{k}\\right)I_t - \\frac{\\lambda}{k}J_t\\right\\} \\\\ &amp; = \\sigma^2\\left\\{\\frac{\\lambda t}{k}I_t - \\frac{\\lambda}{k}J_t\\right\\}\\,. \\end{align*}\\] Hence \\[\\begin{align*} \\mathrm{var}\\left(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}}\\right) &amp; = \\frac{k^2}{\\lambda^2t^2}\\boldsymbol{c}^{\\mathrm{T}}\\left(\\frac{\\lambda t}{k}I_t - \\frac{\\lambda}{k}J_t\\right)\\boldsymbol{c}\\sigma^2 \\\\ &amp; = \\frac{k\\sigma^2}{\\lambda t}\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{c} \\\\ &amp; = \\frac{k\\sigma^2}{\\lambda t}\\sum_{j=1}^tc_i^2\\,, \\end{align*}\\] as \\(\\boldsymbol{c}^{\\mathrm{T}}J_t = \\boldsymbol{0}\\) as \\(\\sum_{j=1}^tc_j = 0\\). The estimator is also unbiased (\\(E(\\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}}) = \\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}\\)), and hence the sampling distribution, upon which inference can be based, is given by \\[ \\widehat{\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}} \\sim N\\left(\\boldsymbol{c}^{\\mathrm{T}}\\boldsymbol{\\tau}, \\frac{k\\sigma^2}{\\lambda t}\\sum_{j=1}^t c_j^2\\right)\\,. \\] Returning to Example 3.2, we can use these results to estimate all pairwise differences between the four treatments. Firstly, we directly calculate the \\(q_j\\) from treatment and block sums, using the incidence matrix. trtsum &lt;- aggregate(wear ~ compound, data = tyre, FUN = sum)[, 2] blocksum &lt;- aggregate(wear ~ block, data = tyre, FUN = sum)[, 2] q &lt;- trtsum - N %*% blocksum / 3 C &lt;- matrix( c(1, -1, 0, 0, 1, 0, -1, 0, 1, 0, 0, -1, 0, 1, -1, 0, 0, 1, 0, -1, 0, 0, 1, -1), ncol = 4, byrow = T ) k &lt;- 3; lambda &lt;- 2; t &lt;- 4 pe &lt;- k * C %*% q / (lambda * t) # point estimates se &lt;- sqrt(2 * k * tyre.s2 / (lambda * t)) # st error (same for each contrast) t.ratio &lt;- pe / se p.value &lt;- 1 - ptukey(abs(t.ratio) * sqrt(2), 4, 5) data.frame(Pair = c(&#39;1v2&#39;, &#39;1v3&#39;, &#39;1v4&#39;, &#39;2v3&#39;, &#39;2v4&#39;, &#39;3v4&#39;), Estimate = pe, St.err = se, t.ratio = t.ratio, p.value = p.value, reject = p.value &lt; 0.05) ## Pair Estimate St.err t.ratio p.value reject ## 1 1v2 -4.375 16.21 -0.270 0.992273 FALSE ## 2 1v3 -76.250 16.21 -4.705 0.019509 TRUE ## 3 1v4 -100.875 16.21 -6.225 0.005912 TRUE ## 4 2v3 -71.875 16.21 -4.435 0.024757 TRUE ## 5 2v4 -96.500 16.21 -5.955 0.007188 TRUE ## 6 3v4 -24.625 16.21 -1.519 0.491534 FALSE Secondly, we can use emmeans to generate the same output from an lm object. tyre.emm &lt;- emmeans::emmeans(tyre.lm, ~ compound) pairs(tyre.emm) ## contrast estimate SE df t.ratio p.value ## 1 - 2 -4.37 16.2 5 -0.270 0.9923 ## 1 - 3 -76.25 16.2 5 -4.705 0.0195 ## 1 - 4 -100.87 16.2 5 -6.225 0.0059 ## 2 - 3 -71.88 16.2 5 -4.435 0.0248 ## 2 - 4 -96.50 16.2 5 -5.955 0.0072 ## 3 - 4 -24.62 16.2 5 -1.519 0.4915 ## ## Results are averaged over the levels of: block ## P value adjustment: tukey method for comparing a family of 4 estimates For this experiment, treatments 1 and 3, 1 and 4, 2 and 3, and 2 and 4 are significantly different at an experiment-wise type I error rate of 5%. 3.7 Exercises Consider the below randomised complete block design for comparing two catalysts, \\(A\\) and \\(B\\), for a chemical reaction using six batches of material. The response is the yield (%) from the reaction. Catalyst Batch 1 Batch 2 Batch 3 Batch 4 Batch 5 Batch 6 A 9 19 28 22 18 8 B 10 22 30 21 23 12 Write down a unit-block-treatment model for this example. Test if there is a significant difference between catalysts at the 5% level. Fit a unit-treatment model ignoring blocks and test again for a difference between catalysts. Comment on difference between this analysis and the one including blocks. Solution i. The unit-block-treatment model for this RCBD is given by \\begin{equation} y_{ij} = + _i + j + {ij},i = 1, , 6; j = , ,, \\tag{3.14} \\end{equation} where $y_{ij}$ is the yield from the application of catalyst $j$ to block $i$, $\\mu$ is a constant parameter, $\\beta_i$ is the effect of block $i$ and $\\tau_j$ is the effect of treatment $j$. The errors follow a normal distribution $\\varepsilon_{ij}\\sim N(0, \\sigma^2)$ with mean 0 and constant variance, and are assumed independent for different experimental units. To test if there is a difference between catalysts, we compare model (3.14) with the model that only includes block effects: \\[\\begin{equation} y_{ij} = \\mu + \\beta_i + \\varepsilon_{ij}\\,\\qquad i = 1, \\ldots, 6; j = \\mathrm{A}, \\mathrm{B}\\,. \\tag{3.15} \\end{equation}\\] The relative difference in the residual mean squares between these two models follows an F distribution under \\(H_0: \\tau_1 = \\tau_2 = 0\\), see Section 3.3. These test statistic and associated p-value can be calculated in R using anova. reaction &lt;- data.frame( catalyst = factor(rep(c(&#39;A&#39;, &#39;B&#39;), 6)), batch = factor(rep(1:6, rep(2, 6))), yield = c(9, 10, 19, 22, 28, 30, 22, 21, 18, 23, 8, 12) ) reaction.lm &lt;- lm(yield ~ batch + catalyst, data = reaction) anova(reaction.lm) ## Analysis of Variance Table ## ## Response: yield ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## batch 5 561 112.2 48.1 0.00031 *** ## catalyst 1 16 16.3 7.0 0.04566 * ## Residuals 5 12 2.3 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The p-value is (just) less than 0.05, and so we can reject \\(H_0\\) (no treatment difference) at the 5% level. The unit-treatment model is given by \\[ y_{ij} = \\mu + \\tau_j + \\varepsilon_{ij}\\,,\\qquad i = 1,\\ldots, 6; j = 1,2\\,, \\] where now all the between unit differences, including any block-to-block differences, are modelled by the unit errors \\(\\varepsilon_{ij}\\). We can fit this model in R. reaction2.lm &lt;- lm(yield ~ catalyst, data = reaction) anova(reaction2.lm) ## Analysis of Variance Table ## ## Response: yield ## Df Sum Sq Mean Sq F value Pr(&gt;F) ## catalyst 1 16 16.3 0.29 0.6 ## Residuals 10 573 57.3 There is no longer evidence to reject the null hypothesis of no treatment difference. This is because the residual mean square is now so much larger (57.2667 versus 2.3333). The residual mean square is also an unbiased estimate of \\(\\sigma^2\\), and our estimate of \\(\\sigma^2\\) from the unit-treatment model is clearly much larger, as block-to-block variation has also been included. Consider the data below obtained from an agricultural experiment in which six different fertilizers were given to a crop of blackcurrants in a field. The field was divided into four equal areas of land so that the land in each area was fairly homogeneous. Each area of land was further subdivided into six plots and one of the fertilizers, chosen by a random procedure, was applied to each plot. The yields of blackcurrants obtained from each plot were recorded (in lbs) and are given in Table 3.3. In this randomised block design the treatments are the six fertilizers and the blocks are the four areas of land. blackcurrent &lt;- data.frame(fertilizer = rep(factor(1:6), 4), block = rep(factor(1:4), rep(6, 4)), yield = c(14.5, 13.5, 11.5, 13.0, 15.0, 12.5, 12.0, 10.0, 11.0, 13.0, 12.0, 13.5, 9.0, 9.0, 14.0, 13.5, 8.0, 14.0, 6.5, 8.5, 10.0, 7.5, 7.0, 8.0) ) knitr::kable( tidyr::pivot_wider(blackcurrent, names_from = fertilizer, values_from = yield), col.names = c(&quot;Block&quot;, paste(&quot;Ferilizer&quot;, 1:6)), caption = &quot;Blackcurrent experiment: yield (lbs) from six different fertilizers.&quot; ) Table 3.3: Blackcurrent experiment: yield (lbs) from six different fertilizers. Block Ferilizer 1 Ferilizer 2 Ferilizer 3 Ferilizer 4 Ferilizer 5 Ferilizer 6 1 14.5 13.5 11.5 13.0 15 12.5 2 12.0 10.0 11.0 13.0 12 13.5 3 9.0 9.0 14.0 13.5 8 14.0 4 6.5 8.5 10.0 7.5 7 8.0 Conduct a full analysis of this experiment, including exploratory data analysis; fitting an appropriate linear model, and conducting an F-test to compare a model that explains variation between the six fertilizers to the model only containing blocks; Linear model diagnostics; if appropriate, multiple comparisons of all pairwise differences between treatments. Prove that \\(2k/\\lambda t &gt; 2/b\\), and use this result to compare the precision of a pairwise treatment comparison from a BIBD with block size \\(k\\) and an RCBD, both with \\(t\\) treatments in \\(b\\) blocks. Construct a BIBD for \\(t=5\\) treatments in \\(b=5\\) blocks of size \\(k=4\\) units. What are \\(r\\) and \\(k\\) for your design? Compare your design to a RCBD via the efficiency for estimating a pairwise treatment difference. Consider an experiment for testing the abrasion resistance of rubber-coated fabric. There are four types of material, denoted A - D. The response is the loss in weight in 0.1 milligrams (mg) over a standard period of time. The testing machine has four positions, so four samples of material can be tested at a time. Past experience suggests that there may be differences between these positions, and there may be differences between each application of the testing machine (due to changes in set-up). Therefore, we have two blocking variables, “Position” and “Application”. For this experiment, we use a latin square design, as follows. fabric &lt;- data.frame(material = factor(c(&#39;C&#39;, &#39;D&#39;, &#39;B&#39;, &#39;A&#39;, &#39;A&#39;, &#39;B&#39;, &#39;D&#39;, &#39;C&#39;, &#39;D&#39;, &#39;C&#39;, &#39;A&#39;, &#39;B&#39;, &#39;B&#39;, &#39;A&#39;, &#39;C&#39;, &#39;D&#39;)), position = rep(factor(1:4), 4), application = rep(factor(1:4), rep(4, 4)), weight = c(235, 236, 218, 268, 251, 241, 227, 229, 234, 273, 274, 226, 195, 270, 230, 225) ) knitr::kable( tidyr::pivot_wider(fabric, id_cols = application, names_from = position, values_from = material), col.names = c(&quot;Application&quot;, paste(&quot;Position&quot;, 1:4))) Application Position 1 Position 2 Position 3 Position 4 1 C D B A 2 A B D C 3 D C A B 4 B A C D The blocking variables are represented as the rows and columns of the square; the latin letters represent the different treatments. A latin square of order \\(k\\) is a \\(k\\times k\\) square of \\(k\\) latin letters arranged so that each letter appears exactly once in each row and column (Sudoko squares are also examples of latin squares). To perform the experiment, the levels of the blocking factors are randomly assigned to the rows and the columns, and the different treatments to the letters. A suitable unit-block-treatment model for a latin square design has the form \\[ y_{ijk} = \\mu + \\beta_i + \\gamma_j + \\tau_k + \\varepsilon_{ijk}\\,,\\qquad i,j,k = 1,\\ldots, t\\,, \\] with \\(\\mu\\) a constant parameter, \\(\\beta_i\\) row block effects, \\(\\gamma_j\\) column block effects and \\(\\tau_k\\) the treatment effects. As usual, \\(\\varepsilon_{ijk}\\sim N(0, \\sigma^2)\\), with errors from different units assumed independent. Note that not all combinations of \\(i,j,k\\) actually occur in the design; at the intersection of the \\(i\\)th row and \\(j\\)th column, only one of the \\(t\\) treatments is applied. Write down a set of normal equations for the model parameters. It can be shown that the reduced normal equations for the treatment parameters \\(\\tau_1,\\ldots, \\tau_t\\) have the form \\[ \\hat{\\tau}_k - \\hat{\\tau}_w = \\bar{y}_{..j} - \\bar{y}_{...}\\,, \\] with \\(\\hat{\\tau}_w = \\frac{1}{t}\\sum_{k=1}^t\\hat{\\tau}_k\\), \\(\\bar{y}_{..k} = \\frac{1}{t}\\sum_{i=1}^t\\sum_{j=1}^tn_{ijk}y_{ijk}\\) (mean for treatment \\(k\\)) and \\(\\bar{y}_{...} = \\frac{1}{n}\\sum_{i=1}^t\\sum_{j=1}^t\\sum_{k=1}^tn_{ij}y_{ijk}\\) (overall mean) where \\(n_{ijk} = 1\\) if treatment \\(k\\) occurs at the intersection of row \\(i\\) and column \\(j\\) and zero otherwise, and \\(\\sum_{i=1}^t\\sum_{j=1}^tn_{ijk} = t\\) for all \\(k=1, \\ldots, t\\). Demonstrate that any contrast can therefore be estimated from this design, and derive the variance of the estimator of \\(\\sum_{k=1}^tc_k\\tau_k\\). The data for this experiment is as follows, where the entries in the table give the response for the corresponding treatment: knitr::kable( tidyr::pivot_wider(fabric, id_cols = application, names_from = position, values_from = weight), col.names = c(&quot;Application&quot;, paste(&quot;Position&quot;, 1:4))) Application Position 1 Position 2 Position 3 Position 4 1 235 236 218 268 2 251 241 227 229 3 234 273 274 226 4 195 270 230 225 For this data, test if there is a significant difference between materials. If there is, conduct multiple comparisons of all pairs at an experimentwise type I error rate of 5%. References "],["factorial.html", "Chapter 4 Factorial experiments", " Chapter 4 Factorial experiments "],["block-factorial.html", "Chapter 5 Blocking in factorial designs", " Chapter 5 Blocking in factorial designs "],["fractional-factorial.html", "Chapter 6 Fractional factorial designs", " Chapter 6 Fractional factorial designs "],["response-surface-methodology.html", "Chapter 7 Response surface methodology", " Chapter 7 Response surface methodology "],["optimal-design-of-experiments.html", "Chapter 8 Optimal design of experiments", " Chapter 8 Optimal design of experiments "],["references.html", "References", " References "]]
